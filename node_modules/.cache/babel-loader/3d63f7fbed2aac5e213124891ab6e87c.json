{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createElementVNode, openBlock, createElementBlock, normalizeClass, withKeys, withModifiers, withDirectives, vModelRadio, renderSlot, createTextVNode, toDisplayString } from 'vue';\nvar _hoisted_1 = [\"aria-checked\", \"aria-disabled\", \"tabindex\"];\n\nvar _hoisted_2 = /* @__PURE__ */createElementVNode(\"span\", {\n  \"class\": \"el-radio__inner\"\n}, null, -1);\n\nvar _hoisted_3 = [\"value\", \"name\", \"disabled\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _ref;\n\n  return openBlock(), createElementBlock(\"label\", {\n    \"class\": normalizeClass([\"el-radio\", (_ref = {}, _defineProperty(_ref, \"el-radio--\".concat(_ctx.size || \"\"), _ctx.size), _defineProperty(_ref, \"is-disabled\", _ctx.disabled), _defineProperty(_ref, \"is-focus\", _ctx.focus), _defineProperty(_ref, \"is-bordered\", _ctx.border), _defineProperty(_ref, \"is-checked\", _ctx.modelValue === _ctx.label), _ref)]),\n    role: \"radio\",\n    \"aria-checked\": _ctx.modelValue === _ctx.label,\n    \"aria-disabled\": _ctx.disabled,\n    tabindex: _ctx.tabIndex,\n    onKeydown: _cache[5] || (_cache[5] = withKeys(withModifiers(function ($event) {\n      return _ctx.modelValue = _ctx.disabled ? _ctx.modelValue : _ctx.label;\n    }, [\"stop\", \"prevent\"]), [\"space\"]))\n  }, [createElementVNode(\"span\", {\n    \"class\": normalizeClass([\"el-radio__input\", {\n      \"is-disabled\": _ctx.disabled,\n      \"is-checked\": _ctx.modelValue === _ctx.label\n    }])\n  }, [_hoisted_2, withDirectives(createElementVNode(\"input\", {\n    ref: \"radioRef\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.modelValue = $event;\n    }),\n    \"class\": \"el-radio__original\",\n    value: _ctx.label,\n    type: \"radio\",\n    \"aria-hidden\": \"true\",\n    name: _ctx.name,\n    disabled: _ctx.disabled,\n    tabindex: \"-1\",\n    onFocus: _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.focus = true;\n    }),\n    onBlur: _cache[2] || (_cache[2] = function ($event) {\n      return _ctx.focus = false;\n    }),\n    onChange: _cache[3] || (_cache[3] = function () {\n      return _ctx.handleChange && _ctx.handleChange.apply(_ctx, arguments);\n    })\n  }, null, 40, _hoisted_3), [[vModelRadio, _ctx.modelValue]])], 2), createElementVNode(\"span\", {\n    \"class\": \"el-radio__label\",\n    onKeydown: _cache[4] || (_cache[4] = withModifiers(function () {}, [\"stop\"]))\n  }, [renderSlot(_ctx.$slots, \"default\", {}, function () {\n    return [createTextVNode(toDisplayString(_ctx.label), 1)];\n  })], 32)], 42, _hoisted_1);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}