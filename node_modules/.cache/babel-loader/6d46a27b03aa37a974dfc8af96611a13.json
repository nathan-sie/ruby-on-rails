{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { defineComponent, inject, computed, h, renderSlot } from 'vue';\nimport { buildProps, definePropType, mutable } from '../../../utils/props.mjs';\nvar colProps = buildProps({\n  tag: {\n    type: String,\n    \"default\": \"div\"\n  },\n  span: {\n    type: Number,\n    \"default\": 24\n  },\n  offset: {\n    type: Number,\n    \"default\": 0\n  },\n  pull: {\n    type: Number,\n    \"default\": 0\n  },\n  push: {\n    type: Number,\n    \"default\": 0\n  },\n  xs: {\n    type: definePropType([Number, Object]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  },\n  sm: {\n    type: definePropType([Number, Object]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  },\n  md: {\n    type: definePropType([Number, Object]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  },\n  lg: {\n    type: definePropType([Number, Object]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  },\n  xl: {\n    type: definePropType([Number, Object]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  }\n});\nvar Col = defineComponent({\n  name: \"ElCol\",\n  props: colProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n\n    var _inject = inject(\"ElRow\", {\n      gutter: {\n        value: 0\n      }\n    }),\n        gutter = _inject.gutter;\n\n    var style = computed(function () {\n      if (gutter.value) {\n        return {\n          paddingLeft: \"\".concat(gutter.value / 2, \"px\"),\n          paddingRight: \"\".concat(gutter.value / 2, \"px\")\n        };\n      }\n\n      return {};\n    });\n    var classList = computed(function () {\n      var classes = [];\n      var pos = [\"span\", \"offset\", \"pull\", \"push\"];\n      pos.forEach(function (prop) {\n        var size = props[prop];\n\n        if (typeof size === \"number\") {\n          if (prop === \"span\") classes.push(\"el-col-\".concat(props[prop]));else if (size > 0) classes.push(\"el-col-\".concat(prop, \"-\").concat(props[prop]));\n        }\n      });\n      var sizes = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\n      sizes.forEach(function (size) {\n        if (typeof props[size] === \"number\") {\n          classes.push(\"el-col-\".concat(size, \"-\").concat(props[size]));\n        } else if (_typeof(props[size]) === \"object\") {\n          var sizeProps = props[size];\n          Object.keys(sizeProps).forEach(function (prop) {\n            classes.push(prop !== \"span\" ? \"el-col-\".concat(size, \"-\").concat(prop, \"-\").concat(sizeProps[prop]) : \"el-col-\".concat(size, \"-\").concat(sizeProps[prop]));\n          });\n        }\n      });\n\n      if (gutter.value) {\n        classes.push(\"is-guttered\");\n      }\n\n      return classes;\n    });\n    return function () {\n      return h(props.tag, {\n        \"class\": [\"el-col\", classList.value],\n        style: style.value\n      }, [renderSlot(slots, \"default\")]);\n    };\n  }\n});\nexport { colProps, Col as default };","map":null,"metadata":{},"sourceType":"module"}