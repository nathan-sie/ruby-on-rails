{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, Fragment, renderList, createBlock, createElementVNode, toDisplayString, createCommentVNode, withDirectives, vShow } from 'vue';\nvar _hoisted_1 = {\n  key: 0,\n  \"class\": \"el-tree__empty-block\"\n};\nvar _hoisted_2 = {\n  \"class\": \"el-tree__empty-text\"\n};\nvar _hoisted_3 = {\n  ref: \"dropIndicator$\",\n  \"class\": \"el-tree__drop-indicator\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _a;\n\n  var _component_el_tree_node = resolveComponent(\"el-tree-node\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"el$\",\n    \"class\": normalizeClass([\"el-tree\", {\n      \"el-tree--highlight-current\": _ctx.highlightCurrent,\n      \"is-dragging\": !!_ctx.dragState.draggingNode,\n      \"is-drop-not-allow\": !_ctx.dragState.allowDrop,\n      \"is-drop-inner\": _ctx.dragState.dropType === \"inner\"\n    }]),\n    role: \"tree\"\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.root.childNodes, function (child) {\n    return openBlock(), createBlock(_component_el_tree_node, {\n      key: _ctx.getNodeKey(child),\n      node: child,\n      props: _ctx.props,\n      accordion: _ctx.accordion,\n      \"render-after-expand\": _ctx.renderAfterExpand,\n      \"show-checkbox\": _ctx.showCheckbox,\n      \"render-content\": _ctx.renderContent,\n      onNodeExpand: _ctx.handleNodeExpand\n    }, null, 8, [\"node\", \"props\", \"accordion\", \"render-after-expand\", \"show-checkbox\", \"render-content\", \"onNodeExpand\"]);\n  }), 128)), _ctx.isEmpty ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [createElementVNode(\"span\", _hoisted_2, toDisplayString((_a = _ctx.emptyText) != null ? _a : _ctx.t(\"el.tree.emptyText\")), 1)])) : createCommentVNode(\"v-if\", true), withDirectives(createElementVNode(\"div\", _hoisted_3, null, 512), [[vShow, _ctx.dragState.showDropIndicator]])], 2);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}