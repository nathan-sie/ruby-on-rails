{"ast":null,"code":"import { resolveComponent, resolveDirective, openBlock, createBlock, withCtx, withDirectives, createElementVNode, normalizeClass, createVNode, withModifiers, createElementBlock, Fragment, renderList, toDisplayString, withKeys, vModelText, createCommentVNode, vShow, renderSlot } from 'vue';\nvar _hoisted_1 = {\n  key: 0,\n  ref: \"tagWrapper\",\n  \"class\": \"el-cascader__tags\"\n};\nvar _hoisted_2 = [\"placeholder\"];\nvar _hoisted_3 = [\"onClick\"];\nvar _hoisted_4 = {\n  \"class\": \"el-cascader__empty-text\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_circle_close = resolveComponent(\"circle-close\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_arrow_down = resolveComponent(\"arrow-down\");\n\n  var _component_el_input = resolveComponent(\"el-input\");\n\n  var _component_el_tag = resolveComponent(\"el-tag\");\n\n  var _component_el_cascader_panel = resolveComponent(\"el-cascader-panel\");\n\n  var _component_check = resolveComponent(\"check\");\n\n  var _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n\n  var _component_el_popper = resolveComponent(\"el-popper\");\n\n  var _directive_clickoutside = resolveDirective(\"clickoutside\");\n\n  return openBlock(), createBlock(_component_el_popper, {\n    ref: \"popper\",\n    visible: _ctx.popperVisible,\n    \"onUpdate:visible\": _cache[17] || (_cache[17] = function ($event) {\n      return _ctx.popperVisible = $event;\n    }),\n    \"manual-mode\": \"\",\n    \"append-to-body\": _ctx.popperAppendToBody,\n    placement: \"bottom-start\",\n    \"popper-class\": \"el-cascader__dropdown \".concat(_ctx.popperClass),\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": [\"bottom-start\", \"top-start\", \"right\", \"left\"],\n    \"stop-popper-mouse-event\": false,\n    transition: \"el-zoom-in-top\",\n    \"gpu-acceleration\": false,\n    effect: _ctx.Effect.LIGHT,\n    pure: \"\",\n    onAfterLeave: _ctx.hideSuggestionPanel\n  }, {\n    trigger: withCtx(function () {\n      return [withDirectives(createElementVNode(\"div\", {\n        \"class\": normalizeClass([\"el-cascader\", _ctx.realSize && \"el-cascader--\".concat(_ctx.realSize), {\n          \"is-disabled\": _ctx.isDisabled\n        }]),\n        onClick: _cache[11] || (_cache[11] = function () {\n          return _ctx.togglePopperVisible(_ctx.readonly ? void 0 : true);\n        }),\n        onKeydown: _cache[12] || (_cache[12] = function () {\n          return _ctx.handleKeyDown && _ctx.handleKeyDown.apply(_ctx, arguments);\n        }),\n        onMouseenter: _cache[13] || (_cache[13] = function ($event) {\n          return _ctx.inputHover = true;\n        }),\n        onMouseleave: _cache[14] || (_cache[14] = function ($event) {\n          return _ctx.inputHover = false;\n        })\n      }, [createVNode(_component_el_input, {\n        ref: \"input\",\n        modelValue: _ctx.inputValue,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return _ctx.inputValue = $event;\n        }),\n        modelModifiers: {\n          trim: true\n        },\n        placeholder: _ctx.inputPlaceholder,\n        readonly: _ctx.readonly,\n        disabled: _ctx.isDisabled,\n        \"validate-event\": false,\n        size: _ctx.realSize,\n        \"class\": normalizeClass({\n          \"is-focus\": _ctx.popperVisible\n        }),\n        onCompositionstart: _ctx.handleComposition,\n        onCompositionupdate: _ctx.handleComposition,\n        onCompositionend: _ctx.handleComposition,\n        onFocus: _cache[2] || (_cache[2] = function (e) {\n          return _ctx.$emit(\"focus\", e);\n        }),\n        onBlur: _cache[3] || (_cache[3] = function (e) {\n          return _ctx.$emit(\"blur\", e);\n        }),\n        onInput: _ctx.handleInput\n      }, {\n        suffix: withCtx(function () {\n          return [_ctx.clearBtnVisible ? (openBlock(), createBlock(_component_el_icon, {\n            key: \"clear\",\n            \"class\": \"el-input__icon icon-circle-close\",\n            onClick: withModifiers(_ctx.handleClear, [\"stop\"])\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_circle_close)];\n            }),\n            _: 1\n          }, 8, [\"onClick\"])) : (openBlock(), createBlock(_component_el_icon, {\n            key: \"arrow-down\",\n            \"class\": normalizeClass([\"el-input__icon\", \"icon-arrow-down\", _ctx.popperVisible && \"is-reverse\"]),\n            onClick: _cache[0] || (_cache[0] = withModifiers(function ($event) {\n              return _ctx.togglePopperVisible();\n            }, [\"stop\"]))\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_arrow_down)];\n            }),\n            _: 1\n          }, 8, [\"class\"]))];\n        }),\n        _: 1\n      }, 8, [\"modelValue\", \"placeholder\", \"readonly\", \"disabled\", \"size\", \"class\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onInput\"]), _ctx.multiple ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.presentTags, function (tag) {\n        return openBlock(), createBlock(_component_el_tag, {\n          key: tag.key,\n          type: \"info\",\n          size: _ctx.tagSize,\n          hit: tag.hitState,\n          closable: tag.closable,\n          \"disable-transitions\": \"\",\n          onClose: function onClose($event) {\n            return _ctx.deleteTag(tag);\n          }\n        }, {\n          \"default\": withCtx(function () {\n            return [createElementVNode(\"span\", null, toDisplayString(tag.text), 1)];\n          }),\n          _: 2\n        }, 1032, [\"size\", \"hit\", \"closable\", \"onClose\"]);\n      }), 128)), _ctx.filterable && !_ctx.isDisabled ? withDirectives((openBlock(), createElementBlock(\"input\", {\n        key: 0,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n          return _ctx.searchInputValue = $event;\n        }),\n        type: \"text\",\n        \"class\": \"el-cascader__search-input\",\n        placeholder: _ctx.presentText ? \"\" : _ctx.inputPlaceholder,\n        onInput: _cache[5] || (_cache[5] = function (e) {\n          return _ctx.handleInput(_ctx.searchInputValue, e);\n        }),\n        onClick: _cache[6] || (_cache[6] = withModifiers(function ($event) {\n          return _ctx.togglePopperVisible(true);\n        }, [\"stop\"])),\n        onKeydown: _cache[7] || (_cache[7] = withKeys(function () {\n          return _ctx.handleDelete && _ctx.handleDelete.apply(_ctx, arguments);\n        }, [\"delete\"])),\n        onCompositionstart: _cache[8] || (_cache[8] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        }),\n        onCompositionupdate: _cache[9] || (_cache[9] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        }),\n        onCompositionend: _cache[10] || (_cache[10] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        })\n      }, null, 40, _hoisted_2)), [[vModelText, _ctx.searchInputValue, void 0, {\n        trim: true\n      }]]) : createCommentVNode(\"v-if\", true)], 512)) : createCommentVNode(\"v-if\", true)], 34), [[_directive_clickoutside, function () {\n        return _ctx.togglePopperVisible(false);\n      }, _ctx.popperPaneRef]])];\n    }),\n    \"default\": withCtx(function () {\n      return [withDirectives(createVNode(_component_el_cascader_panel, {\n        ref: \"panel\",\n        modelValue: _ctx.checkedValue,\n        \"onUpdate:modelValue\": _cache[15] || (_cache[15] = function ($event) {\n          return _ctx.checkedValue = $event;\n        }),\n        options: _ctx.options,\n        props: _ctx.props,\n        border: false,\n        \"render-label\": _ctx.$slots[\"default\"],\n        onExpandChange: _ctx.handleExpandChange,\n        onClose: _cache[16] || (_cache[16] = function ($event) {\n          return _ctx.togglePopperVisible(false);\n        })\n      }, null, 8, [\"modelValue\", \"options\", \"props\", \"render-label\", \"onExpandChange\"]), [[vShow, !_ctx.filtering]]), _ctx.filterable ? withDirectives((openBlock(), createBlock(_component_el_scrollbar, {\n        key: 0,\n        ref: \"suggestionPanel\",\n        tag: \"ul\",\n        \"class\": \"el-cascader__suggestion-panel\",\n        \"view-class\": \"el-cascader__suggestion-list\",\n        onKeydown: _ctx.handleSuggestionKeyDown\n      }, {\n        \"default\": withCtx(function () {\n          return [_ctx.suggestions.length ? (openBlock(true), createElementBlock(Fragment, {\n            key: 0\n          }, renderList(_ctx.suggestions, function (item) {\n            return openBlock(), createElementBlock(\"li\", {\n              key: item.uid,\n              \"class\": normalizeClass([\"el-cascader__suggestion-item\", item.checked && \"is-checked\"]),\n              tabindex: -1,\n              onClick: function onClick($event) {\n                return _ctx.handleSuggestionClick(item);\n              }\n            }, [createElementVNode(\"span\", null, toDisplayString(item.text), 1), item.checked ? (openBlock(), createBlock(_component_el_icon, {\n              key: 0\n            }, {\n              \"default\": withCtx(function () {\n                return [createVNode(_component_check)];\n              }),\n              _: 1\n            })) : createCommentVNode(\"v-if\", true)], 10, _hoisted_3);\n          }), 128)) : renderSlot(_ctx.$slots, \"empty\", {\n            key: 1\n          }, function () {\n            return [createElementVNode(\"li\", _hoisted_4, toDisplayString(_ctx.t(\"el.cascader.noMatch\")), 1)];\n          })];\n        }),\n        _: 3\n      }, 8, [\"onKeydown\"])), [[vShow, _ctx.filtering]]) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 3\n  }, 8, [\"visible\", \"append-to-body\", \"popper-class\", \"popper-options\", \"effect\", \"onAfterLeave\"]);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}