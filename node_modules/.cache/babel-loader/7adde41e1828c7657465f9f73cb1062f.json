{"ast":null,"code":"import { defineComponent, getCurrentInstance } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/props.mjs';\nimport { useDropdown } from './useDropdown.mjs';\nvar script = defineComponent({\n  name: \"ElDropdownItem\",\n  components: {\n    ElIcon: ElIcon\n  },\n  props: buildProps({\n    command: {\n      type: [Object, String, Number],\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    disabled: Boolean,\n    divided: Boolean,\n    icon: {\n      type: definePropType([String, Object])\n    }\n  }),\n  setup: function setup(props) {\n    var _useDropdown = useDropdown(),\n        elDropdown = _useDropdown.elDropdown;\n\n    var _instance = getCurrentInstance();\n\n    function handleClick(e) {\n      var _a, _b;\n\n      if (props.disabled) {\n        e.stopImmediatePropagation();\n        return;\n      }\n\n      if (elDropdown.hideOnClick.value) {\n        (_a = elDropdown.handleClick) == null ? void 0 : _a.call(elDropdown);\n      }\n\n      (_b = elDropdown.commandHandler) == null ? void 0 : _b.call(elDropdown, props.command, _instance, e);\n    }\n\n    return {\n      handleClick: handleClick\n    };\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}