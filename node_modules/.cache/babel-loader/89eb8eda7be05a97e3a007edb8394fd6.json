{"ast":null,"code":"import { defineComponent, getCurrentInstance, computed, ref, watch, provide, h } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { buildProps, definePropType, mutable } from '../../../utils/props.mjs';\nimport '../../../tokens/index.mjs';\nimport './components/prev.mjs';\nimport './components/next.mjs';\nimport './components/sizes.mjs';\nimport './components/jumper.mjs';\nimport './components/total.mjs';\nimport './components/pager.mjs';\nimport { useLocaleInject } from '../../../hooks/use-locale/index.mjs';\nimport { elPaginationKey } from '../../../tokens/pagination.mjs';\nimport script from './components/prev.vue_vue&type=script&lang.mjs';\nimport script$1 from './components/jumper.vue_vue&type=script&lang.mjs';\nimport script$2 from './components/pager.vue_vue&type=script&lang.mjs';\nimport script$3 from './components/next.vue_vue&type=script&lang.mjs';\nimport script$4 from './components/sizes.vue_vue&type=script&lang.mjs';\nimport script$5 from './components/total.vue_vue&type=script&lang.mjs';\n\nvar isAbsent = function isAbsent(v) {\n  return typeof v !== \"number\";\n};\n\nvar paginationProps = buildProps({\n  total: Number,\n  pageSize: Number,\n  defaultPageSize: Number,\n  currentPage: Number,\n  defaultCurrentPage: Number,\n  pageCount: Number,\n  pagerCount: {\n    type: Number,\n    validator: function validator(value) {\n      return typeof value === \"number\" && (value | 0) === value && value > 4 && value < 22 && value % 2 === 1;\n    },\n    \"default\": 7\n  },\n  layout: {\n    type: String,\n    \"default\": [\"prev\", \"pager\", \"next\", \"jumper\", \"->\", \"total\"].join(\", \")\n  },\n  pageSizes: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return mutable([10, 20, 30, 40, 50, 100]);\n    }\n  },\n  popperClass: {\n    type: String,\n    \"default\": \"\"\n  },\n  prevText: {\n    type: String,\n    \"default\": \"\"\n  },\n  nextText: {\n    type: String,\n    \"default\": \"\"\n  },\n  small: Boolean,\n  background: Boolean,\n  disabled: Boolean,\n  hideOnSinglePage: Boolean\n});\nvar paginationEmits = {\n  \"update:current-page\": function updateCurrentPage(val) {\n    return typeof val === \"number\";\n  },\n  \"update:page-size\": function updatePageSize(val) {\n    return typeof val === \"number\";\n  },\n  \"size-change\": function sizeChange(val) {\n    return typeof val === \"number\";\n  },\n  \"current-change\": function currentChange(val) {\n    return typeof val === \"number\";\n  },\n  \"prev-click\": function prevClick(val) {\n    return typeof val === \"number\";\n  },\n  \"next-click\": function nextClick(val) {\n    return typeof val === \"number\";\n  }\n};\nvar componentName = \"ElPagination\";\nvar Pagination = defineComponent({\n  name: componentName,\n  props: paginationProps,\n  emits: paginationEmits,\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n        slots = _ref.slots;\n\n    var _useLocaleInject = useLocaleInject(),\n        t = _useLocaleInject.t;\n\n    var vnodeProps = getCurrentInstance().vnode.props || {};\n    var hasCurrentPageListener = \"onUpdate:currentPage\" in vnodeProps || \"onUpdate:current-page\" in vnodeProps || \"onCurrentChange\" in vnodeProps;\n    var hasPageSizeListener = \"onUpdate:pageSize\" in vnodeProps || \"onUpdate:page-size\" in vnodeProps || \"onSizeChange\" in vnodeProps;\n    var assertValidUsage = computed(function () {\n      if (isAbsent(props.total) && isAbsent(props.pageCount)) return false;\n      if (!isAbsent(props.currentPage) && !hasCurrentPageListener) return false;\n\n      if (props.layout.includes(\"sizes\")) {\n        if (!isAbsent(props.pageCount)) {\n          if (!hasPageSizeListener) return false;\n        } else if (!isAbsent(props.total)) {\n          if (!isAbsent(props.pageSize)) {\n            if (!hasPageSizeListener) {\n              return false;\n            }\n          } else {}\n        }\n      }\n\n      return true;\n    });\n    var innerPageSize = ref(isAbsent(props.defaultPageSize) ? 10 : props.defaultPageSize);\n    var innerCurrentPage = ref(isAbsent(props.defaultCurrentPage) ? 1 : props.defaultCurrentPage);\n    var pageSizeBridge = computed({\n      get: function get() {\n        return isAbsent(props.pageSize) ? innerPageSize.value : props.pageSize;\n      },\n      set: function set(v) {\n        if (isAbsent(props.pageSize)) {\n          innerPageSize.value = v;\n        }\n\n        if (hasPageSizeListener) {\n          emit(\"update:page-size\", v);\n          emit(\"size-change\", v);\n        }\n      }\n    });\n    var pageCountBridge = computed(function () {\n      var pageCount = 0;\n\n      if (!isAbsent(props.pageCount)) {\n        pageCount = props.pageCount;\n      } else if (!isAbsent(props.total)) {\n        pageCount = Math.max(1, Math.ceil(props.total / pageSizeBridge.value));\n      }\n\n      return pageCount;\n    });\n    var currentPageBridge = computed({\n      get: function get() {\n        return isAbsent(props.currentPage) ? innerCurrentPage.value : props.currentPage;\n      },\n      set: function set(v) {\n        var newCurrentPage = v;\n\n        if (v < 1) {\n          newCurrentPage = 1;\n        } else if (v > pageCountBridge.value) {\n          newCurrentPage = pageCountBridge.value;\n        }\n\n        if (isAbsent(props.currentPage)) {\n          innerCurrentPage.value = newCurrentPage;\n        }\n\n        if (hasCurrentPageListener) {\n          emit(\"update:current-page\", newCurrentPage);\n          emit(\"current-change\", newCurrentPage);\n        }\n      }\n    });\n    watch(pageCountBridge, function (val) {\n      if (currentPageBridge.value > val) currentPageBridge.value = val;\n    });\n\n    function handleCurrentChange(val) {\n      currentPageBridge.value = val;\n    }\n\n    function handleSizeChange(val) {\n      pageSizeBridge.value = val;\n      var newPageCount = pageCountBridge.value;\n\n      if (currentPageBridge.value > newPageCount) {\n        currentPageBridge.value = newPageCount;\n      }\n    }\n\n    function prev() {\n      if (props.disabled) return;\n      currentPageBridge.value -= 1;\n      emit(\"prev-click\", currentPageBridge.value);\n    }\n\n    function next() {\n      if (props.disabled) return;\n      currentPageBridge.value += 1;\n      emit(\"next-click\", currentPageBridge.value);\n    }\n\n    provide(elPaginationKey, {\n      pageCount: pageCountBridge,\n      disabled: computed(function () {\n        return props.disabled;\n      }),\n      currentPage: currentPageBridge,\n      changeEvent: handleCurrentChange,\n      handleSizeChange: handleSizeChange\n    });\n    return function () {\n      var _a, _b;\n\n      if (!assertValidUsage.value) {\n        debugWarn(componentName, t(\"el.pagination.deprecationWarning\"));\n        return null;\n      }\n\n      if (!props.layout) return null;\n      if (props.hideOnSinglePage && pageCountBridge.value <= 1) return null;\n      var rootChildren = [];\n      var rightWrapperChildren = [];\n      var rightWrapperRoot = h(\"div\", {\n        \"class\": \"el-pagination__rightwrapper\"\n      }, rightWrapperChildren);\n      var TEMPLATE_MAP = {\n        prev: h(script, {\n          disabled: props.disabled,\n          currentPage: currentPageBridge.value,\n          prevText: props.prevText,\n          onClick: prev\n        }),\n        jumper: h(script$1),\n        pager: h(script$2, {\n          currentPage: currentPageBridge.value,\n          pageCount: pageCountBridge.value,\n          pagerCount: props.pagerCount,\n          onChange: handleCurrentChange,\n          disabled: props.disabled\n        }),\n        next: h(script$3, {\n          disabled: props.disabled,\n          currentPage: currentPageBridge.value,\n          pageCount: pageCountBridge.value,\n          nextText: props.nextText,\n          onClick: next\n        }),\n        sizes: h(script$4, {\n          pageSize: pageSizeBridge.value,\n          pageSizes: props.pageSizes,\n          popperClass: props.popperClass,\n          disabled: props.disabled\n        }),\n        slot: (_b = (_a = slots == null ? void 0 : slots[\"default\"]) == null ? void 0 : _a.call(slots)) != null ? _b : null,\n        total: h(script$5, {\n          total: isAbsent(props.total) ? 0 : props.total\n        })\n      };\n      var components = props.layout.split(\",\").map(function (item) {\n        return item.trim();\n      });\n      var haveRightWrapper = false;\n      components.forEach(function (c) {\n        if (c === \"->\") {\n          haveRightWrapper = true;\n          return;\n        }\n\n        if (!haveRightWrapper) {\n          rootChildren.push(TEMPLATE_MAP[c]);\n        } else {\n          rightWrapperChildren.push(TEMPLATE_MAP[c]);\n        }\n      });\n\n      if (haveRightWrapper && rightWrapperChildren.length > 0) {\n        rootChildren.unshift(rightWrapperRoot);\n      }\n\n      return h(\"div\", {\n        role: \"pagination\",\n        \"aria-label\": \"pagination\",\n        \"class\": [\"el-pagination\", {\n          \"is-background\": props.background,\n          \"el-pagination--small\": props.small\n        }]\n      }, rootChildren);\n    };\n  }\n});\nexport { Pagination as default, paginationEmits, paginationProps };","map":null,"metadata":{},"sourceType":"module"}