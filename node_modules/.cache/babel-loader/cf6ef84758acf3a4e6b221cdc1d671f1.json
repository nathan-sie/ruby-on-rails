{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, renderSlot } from 'vue';\nvar _hoisted_1 = [\"href\"];\nvar _hoisted_2 = {\n  key: 1,\n  \"class\": \"el-link--inner\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  return openBlock(), createElementBlock(\"a\", {\n    \"class\": normalizeClass([\"el-link\", _ctx.type ? \"el-link--\".concat(_ctx.type) : \"\", _ctx.disabled && \"is-disabled\", _ctx.underline && !_ctx.disabled && \"is-underline\"]),\n    href: _ctx.disabled || !_ctx.href ? void 0 : _ctx.href,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);\n    })\n  }, [_ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0\n  }, {\n    \"default\": withCtx(function () {\n      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))];\n    }),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), _ctx.$slots[\"default\"] ? (openBlock(), createElementBlock(\"span\", _hoisted_2, [renderSlot(_ctx.$slots, \"default\")])) : createCommentVNode(\"v-if\", true), _ctx.$slots.icon ? renderSlot(_ctx.$slots, \"icon\", {\n    key: 2\n  }) : createCommentVNode(\"v-if\", true)], 10, _hoisted_1);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}