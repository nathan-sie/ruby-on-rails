{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { defineComponent, getCurrentInstance, ref, computed, onBeforeMount, onMounted, onBeforeUnmount, Fragment, h } from 'vue';\nimport { ElCheckbox } from '../../../checkbox/index.mjs';\nimport { cellStarts } from '../config.mjs';\nimport { mergeOptions, compose } from '../util.mjs';\nimport useWatcher from './watcher-helper.mjs';\nimport useRender from './render-helper.mjs';\nimport defaultProps from './defaults.mjs';\nvar columnIdSeed = 1;\nvar ElTableColumn = defineComponent({\n  name: \"ElTableColumn\",\n  components: {\n    ElCheckbox: ElCheckbox\n  },\n  props: defaultProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var instance = getCurrentInstance();\n    var columnConfig = ref({});\n    var owner = computed(function () {\n      var parent2 = instance.parent;\n\n      while (parent2 && !parent2.tableId) {\n        parent2 = parent2.parent;\n      }\n\n      return parent2;\n    });\n\n    var _useWatcher = useWatcher(owner, props),\n        registerNormalWatchers = _useWatcher.registerNormalWatchers,\n        registerComplexWatchers = _useWatcher.registerComplexWatchers;\n\n    var _useRender = useRender(props, slots, owner),\n        columnId = _useRender.columnId,\n        isSubColumn = _useRender.isSubColumn,\n        realHeaderAlign = _useRender.realHeaderAlign,\n        columnOrTableParent = _useRender.columnOrTableParent,\n        setColumnWidth = _useRender.setColumnWidth,\n        setColumnForcedProps = _useRender.setColumnForcedProps,\n        setColumnRenders = _useRender.setColumnRenders,\n        getPropsData = _useRender.getPropsData,\n        getColumnElIndex = _useRender.getColumnElIndex,\n        realAlign = _useRender.realAlign;\n\n    var parent = columnOrTableParent.value;\n    columnId.value = \"\".concat(parent.tableId || parent.columnId, \"_column_\").concat(columnIdSeed++);\n    onBeforeMount(function () {\n      isSubColumn.value = owner.value !== parent;\n      var type = props.type || \"default\";\n      var sortable = props.sortable === \"\" ? true : props.sortable;\n\n      var defaults = _objectSpread(_objectSpread({}, cellStarts[type]), {}, {\n        id: columnId.value,\n        type: type,\n        property: props.prop || props.property,\n        align: realAlign,\n        headerAlign: realHeaderAlign,\n        showOverflowTooltip: props.showOverflowTooltip || props.showTooltipWhenOverflow,\n        filterable: props.filters || props.filterMethod,\n        filteredValue: [],\n        filterPlacement: \"\",\n        isColumnGroup: false,\n        filterOpened: false,\n        sortable: sortable,\n        index: props.index,\n        rawColumnKey: instance.vnode.key\n      });\n\n      var basicProps = [\"columnKey\", \"label\", \"className\", \"labelClassName\", \"type\", \"renderHeader\", \"formatter\", \"fixed\", \"resizable\"];\n      var sortProps = [\"sortMethod\", \"sortBy\", \"sortOrders\"];\n      var selectProps = [\"selectable\", \"reserveSelection\"];\n      var filterProps = [\"filterMethod\", \"filters\", \"filterMultiple\", \"filterOpened\", \"filteredValue\", \"filterPlacement\"];\n      var column = getPropsData(basicProps, sortProps, selectProps, filterProps);\n      column = mergeOptions(defaults, column);\n      var chains = compose(setColumnRenders, setColumnWidth, setColumnForcedProps);\n      column = chains(column);\n      columnConfig.value = column;\n      registerNormalWatchers();\n      registerComplexWatchers();\n    });\n    onMounted(function () {\n      var _a;\n\n      var parent2 = columnOrTableParent.value;\n      var children = isSubColumn.value ? parent2.vnode.el.children : (_a = parent2.refs.hiddenColumns) == null ? void 0 : _a.children;\n\n      var getColumnIndex = function getColumnIndex() {\n        return getColumnElIndex(children || [], instance.vnode.el);\n      };\n\n      columnConfig.value.getColumnIndex = getColumnIndex;\n      var columnIndex = getColumnIndex();\n      columnIndex > -1 && owner.value.store.commit(\"insertColumn\", columnConfig.value, isSubColumn.value ? parent2.columnConfig.value : null);\n    });\n    onBeforeUnmount(function () {\n      owner.value.store.commit(\"removeColumn\", columnConfig.value, isSubColumn.value ? parent.columnConfig.value : null);\n    });\n    instance.columnId = columnId.value;\n    instance.columnConfig = columnConfig;\n    return;\n  },\n  render: function render() {\n    var _a, _b, _c;\n\n    var children = [];\n\n    try {\n      var renderDefault = (_b = (_a = this.$slots)[\"default\"]) == null ? void 0 : _b.call(_a, {\n        row: {},\n        column: {},\n        $index: -1\n      });\n\n      if (renderDefault instanceof Array) {\n        var _iterator = _createForOfIteratorHelper(renderDefault),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var childNode = _step.value;\n\n            if (((_c = childNode.type) == null ? void 0 : _c.name) === \"ElTableColumn\" || childNode.shapeFlag & 2) {\n              children.push(childNode);\n            } else if (childNode.type === Fragment && childNode.children instanceof Array) {\n              var _children;\n\n              (_children = children).push.apply(_children, _toConsumableArray(childNode.children));\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    } catch (e) {\n      children = [];\n    }\n\n    return h(\"div\", children);\n  }\n});\nexport { ElTableColumn as default };","map":null,"metadata":{},"sourceType":"module"}