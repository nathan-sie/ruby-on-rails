{"ast":null,"code":"import { defineComponent, inject, h } from 'vue';\nimport { addUnit } from '../../../utils/util.mjs';\nimport { getNormalizedProps } from '../../../utils/vnode.mjs';\nimport { elDescriptionsKey } from './token.mjs';\nvar DescriptionsCell = defineComponent({\n  name: \"ElDescriptionsCell\",\n  props: {\n    cell: {\n      type: Object\n    },\n    tag: {\n      type: String\n    },\n    type: {\n      type: String\n    }\n  },\n  setup: function setup() {\n    var descriptions = inject(elDescriptionsKey, {});\n    return {\n      descriptions: descriptions\n    };\n  },\n  render: function render() {\n    var _a, _b, _c, _d, _e, _f;\n\n    var item = getNormalizedProps(this.cell);\n    var label = ((_c = (_b = (_a = this.cell) == null ? void 0 : _a.children) == null ? void 0 : _b.label) == null ? void 0 : _c.call(_b)) || item.label;\n    var content = (_f = (_e = (_d = this.cell) == null ? void 0 : _d.children) == null ? void 0 : _e[\"default\"]) == null ? void 0 : _f.call(_e);\n    var span = item.span;\n    var align = item.align ? \"is-\".concat(item.align) : \"\";\n    var labelAlign = item.labelAlign ? \"is-\".concat(item.labelAlign) : align;\n    var className = item.className;\n    var labelClassName = item.labelClassName;\n    var style = {\n      width: addUnit(item.width),\n      minWidth: addUnit(item.minWidth)\n    };\n\n    switch (this.type) {\n      case \"label\":\n        return h(this.tag, {\n          style: style,\n          \"class\": [\"el-descriptions__cell\", \"el-descriptions__label\", {\n            \"is-bordered-label\": this.descriptions.border\n          }, labelAlign, labelClassName],\n          colSpan: this.descriptions.direction === \"vertical\" ? span : 1\n        }, label);\n\n      case \"content\":\n        return h(this.tag, {\n          style: style,\n          \"class\": [\"el-descriptions__cell\", \"el-descriptions__content\", align, className],\n          colSpan: this.descriptions.direction === \"vertical\" ? span : span * 2 - 1\n        }, content);\n\n      default:\n        return h(\"td\", {\n          style: style,\n          \"class\": [\"el-descriptions__cell\", align],\n          colSpan: span\n        }, [h(\"span\", {\n          \"class\": [\"el-descriptions__label\", labelClassName]\n        }, label), h(\"span\", {\n          \"class\": [\"el-descriptions__content\", className]\n        }, content)]);\n    }\n  }\n});\nexport { DescriptionsCell as default };","map":null,"metadata":{},"sourceType":"module"}