{"ast":null,"code":"import { h, Transition, withCtx, withDirectives, vShow } from 'vue';\nimport { NOOP } from '@vue/shared';\nimport { stop } from '../../../../utils/dom.mjs';\n\nfunction renderPopper(props, children) {\n  var effect = props.effect,\n      name = props.name,\n      stopPopperMouseEvent = props.stopPopperMouseEvent,\n      popperClass = props.popperClass,\n      popperStyle = props.popperStyle,\n      popperRef = props.popperRef,\n      pure = props.pure,\n      popperId = props.popperId,\n      visibility = props.visibility,\n      onMouseenter = props.onMouseenter,\n      onMouseleave = props.onMouseleave,\n      onAfterEnter = props.onAfterEnter,\n      onAfterLeave = props.onAfterLeave,\n      onBeforeEnter = props.onBeforeEnter,\n      onBeforeLeave = props.onBeforeLeave;\n  var kls = [popperClass, \"el-popper\", \"is-\".concat(effect), pure ? \"is-pure\" : \"\"];\n  var mouseUpAndDown = stopPopperMouseEvent ? stop : NOOP;\n  return h(Transition, {\n    name: name,\n    onAfterEnter: onAfterEnter,\n    onAfterLeave: onAfterLeave,\n    onBeforeEnter: onBeforeEnter,\n    onBeforeLeave: onBeforeLeave\n  }, {\n    \"default\": withCtx(function () {\n      return [withDirectives(h(\"div\", {\n        \"aria-hidden\": String(!visibility),\n        \"class\": kls,\n        style: popperStyle != null ? popperStyle : {},\n        id: popperId,\n        ref: popperRef != null ? popperRef : \"popperRef\",\n        role: \"tooltip\",\n        onMouseenter: onMouseenter,\n        onMouseleave: onMouseleave,\n        onClick: stop,\n        onMousedown: mouseUpAndDown,\n        onMouseup: mouseUpAndDown\n      }, children), [[vShow, visibility]])];\n    })\n  });\n}\n\nexport { renderPopper as default };","map":null,"metadata":{},"sourceType":"module"}