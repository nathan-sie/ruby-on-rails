{"ast":null,"code":"var _treeEmits;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { buildProps, definePropType, mutable } from '../../../utils/props.mjs';\nvar ROOT_TREE_INJECTION_KEY = Symbol();\nvar EMPTY_NODE = {\n  key: -1,\n  level: -1,\n  data: {}\n};\nvar TreeOptionsEnum;\n\n(function (TreeOptionsEnum2) {\n  TreeOptionsEnum2[\"KEY\"] = \"id\";\n  TreeOptionsEnum2[\"LABEL\"] = \"label\";\n  TreeOptionsEnum2[\"CHILDREN\"] = \"children\";\n  TreeOptionsEnum2[\"DISABLED\"] = \"disabled\";\n})(TreeOptionsEnum || (TreeOptionsEnum = {}));\n\nvar SetOperationEnum;\n\n(function (SetOperationEnum2) {\n  SetOperationEnum2[\"ADD\"] = \"add\";\n  SetOperationEnum2[\"DELETE\"] = \"delete\";\n})(SetOperationEnum || (SetOperationEnum = {}));\n\nvar treeProps = buildProps({\n  data: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return mutable([]);\n    }\n  },\n  emptyText: {\n    type: String\n  },\n  height: {\n    type: Number,\n    \"default\": 200\n  },\n  props: {\n    type: definePropType(Object),\n    \"default\": function _default() {\n      return mutable({\n        children: TreeOptionsEnum.CHILDREN,\n        label: TreeOptionsEnum.LABEL,\n        disabled: TreeOptionsEnum.DISABLED,\n        value: TreeOptionsEnum.KEY\n      });\n    }\n  },\n  highlightCurrent: {\n    type: Boolean,\n    \"default\": false\n  },\n  showCheckbox: {\n    type: Boolean,\n    \"default\": false\n  },\n  defaultCheckedKeys: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return mutable([]);\n    }\n  },\n  checkStrictly: {\n    type: Boolean,\n    \"default\": false\n  },\n  defaultExpandedKeys: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return mutable([]);\n    }\n  },\n  indent: {\n    type: Number,\n    \"default\": 16\n  },\n  icon: {\n    type: String\n  },\n  expandOnClickNode: {\n    type: Boolean,\n    \"default\": true\n  },\n  checkOnClickNode: {\n    type: Boolean,\n    \"default\": false\n  },\n  currentNodeKey: {\n    type: definePropType([String, Number])\n  },\n  accordion: {\n    type: Boolean,\n    \"default\": false\n  },\n  filterMethod: {\n    type: definePropType(Function)\n  },\n  perfMode: {\n    type: Boolean,\n    \"default\": true\n  }\n});\nvar treeNodeProps = buildProps({\n  node: {\n    type: definePropType(Object),\n    \"default\": function _default() {\n      return mutable(EMPTY_NODE);\n    }\n  },\n  expanded: {\n    type: Boolean,\n    \"default\": false\n  },\n  checked: {\n    type: Boolean,\n    \"default\": false\n  },\n  indeterminate: {\n    type: Boolean,\n    \"default\": false\n  },\n  showCheckbox: {\n    type: Boolean,\n    \"default\": false\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": false\n  },\n  current: {\n    type: Boolean,\n    \"default\": false\n  },\n  hiddenExpandIcon: {\n    type: Boolean,\n    \"default\": false\n  }\n});\nvar treeNodeContentProps = buildProps({\n  node: {\n    type: definePropType(Object),\n    required: true\n  }\n});\nvar NODE_CLICK = \"node-click\";\nvar NODE_EXPAND = \"node-expand\";\nvar NODE_COLLAPSE = \"node-collapse\";\nvar CURRENT_CHANGE = \"current-change\";\nvar NODE_CHECK = \"check\";\nvar NODE_CHECK_CHANGE = \"check-change\";\nvar NODE_CONTEXTMENU = \"node-contextmenu\";\nvar treeEmits = (_treeEmits = {}, _defineProperty(_treeEmits, NODE_CLICK, function (data, node) {\n  return data && node;\n}), _defineProperty(_treeEmits, NODE_EXPAND, function (data, node) {\n  return data && node;\n}), _defineProperty(_treeEmits, NODE_COLLAPSE, function (data, node) {\n  return data && node;\n}), _defineProperty(_treeEmits, CURRENT_CHANGE, function (data, node) {\n  return data && node;\n}), _defineProperty(_treeEmits, NODE_CHECK, function (data, checkedInfo) {\n  return data && checkedInfo;\n}), _defineProperty(_treeEmits, NODE_CHECK_CHANGE, function (data, checked) {\n  return data && typeof checked === \"boolean\";\n}), _defineProperty(_treeEmits, NODE_CONTEXTMENU, function (event, data, node) {\n  return event && data && node;\n}), _treeEmits);\nvar treeNodeEmits = {\n  click: function click(node) {\n    return !!node;\n  },\n  toggle: function toggle(node) {\n    return !!node;\n  },\n  check: function check(node, checked) {\n    return node && typeof checked === \"boolean\";\n  }\n};\nexport { CURRENT_CHANGE, NODE_CHECK, NODE_CHECK_CHANGE, NODE_CLICK, NODE_COLLAPSE, NODE_CONTEXTMENU, NODE_EXPAND, ROOT_TREE_INJECTION_KEY, SetOperationEnum, TreeOptionsEnum, treeEmits, treeNodeContentProps, treeNodeEmits, treeNodeProps, treeProps };","map":null,"metadata":{},"sourceType":"module"}