{"ast":null,"code":"var _inputEmits;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { isString } from '@vue/shared';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType, mutable } from '../../../utils/props.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../utils/constants.mjs';\nimport { useFormItemProps } from '../../../hooks/use-form-item/index.mjs';\nvar inputProps = buildProps(_objectSpread(_objectSpread({}, useFormItemProps), {}, {\n  modelValue: {\n    type: definePropType(void 0),\n    \"default\": \"\"\n  },\n  type: {\n    type: String,\n    \"default\": \"text\"\n  },\n  resize: {\n    type: String,\n    values: [\"none\", \"both\", \"horizontal\", \"vertical\"]\n  },\n  autosize: {\n    type: definePropType([Boolean, Object]),\n    \"default\": false\n  },\n  autocomplete: {\n    type: String,\n    \"default\": \"off\"\n  },\n  placeholder: {\n    type: String\n  },\n  form: {\n    type: String,\n    \"default\": \"\"\n  },\n  readonly: {\n    type: Boolean,\n    \"default\": false\n  },\n  clearable: {\n    type: Boolean,\n    \"default\": false\n  },\n  showPassword: {\n    type: Boolean,\n    \"default\": false\n  },\n  showWordLimit: {\n    type: Boolean,\n    \"default\": false\n  },\n  suffixIcon: {\n    type: definePropType([String, Object]),\n    \"default\": \"\"\n  },\n  prefixIcon: {\n    type: definePropType([String, Object]),\n    \"default\": \"\"\n  },\n  label: {\n    type: String\n  },\n  tabindex: {\n    type: [Number, String]\n  },\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  },\n  inputStyle: {\n    type: definePropType([Object, Array, String]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  }\n}));\nvar inputEmits = (_inputEmits = {}, _defineProperty(_inputEmits, UPDATE_MODEL_EVENT, function (value) {\n  return isString(value);\n}), _defineProperty(_inputEmits, \"input\", function input(value) {\n  return isString(value);\n}), _defineProperty(_inputEmits, \"change\", function change(value) {\n  return isString(value);\n}), _defineProperty(_inputEmits, \"focus\", function focus(evt) {\n  return evt instanceof FocusEvent;\n}), _defineProperty(_inputEmits, \"blur\", function blur(evt) {\n  return evt instanceof FocusEvent;\n}), _defineProperty(_inputEmits, \"clear\", function clear() {\n  return true;\n}), _defineProperty(_inputEmits, \"mouseleave\", function mouseleave(evt) {\n  return evt instanceof MouseEvent;\n}), _defineProperty(_inputEmits, \"mouseenter\", function mouseenter(evt) {\n  return evt instanceof MouseEvent;\n}), _defineProperty(_inputEmits, \"keydown\", function keydown(evt) {\n  return evt instanceof KeyboardEvent;\n}), _defineProperty(_inputEmits, \"compositionstart\", function compositionstart(evt) {\n  return evt instanceof CompositionEvent;\n}), _defineProperty(_inputEmits, \"compositionupdate\", function compositionupdate(evt) {\n  return evt instanceof CompositionEvent;\n}), _defineProperty(_inputEmits, \"compositionend\", function compositionend(evt) {\n  return evt instanceof CompositionEvent;\n}), _inputEmits);\nexport { inputEmits, inputProps };","map":null,"metadata":{},"sourceType":"module"}