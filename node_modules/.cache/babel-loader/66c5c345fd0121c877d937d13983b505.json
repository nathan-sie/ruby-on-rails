{"ast":null,"code":"import { resolveComponent, resolveDirective, openBlock, createBlock, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, createVNode, mergeProps, withKeys, withModifiers, createSlots, renderSlot, createElementBlock, Fragment, renderList, createTextVNode, toDisplayString } from 'vue';\nvar _hoisted_1 = [\"aria-expanded\", \"aria-owns\"];\nvar _hoisted_2 = {\n  key: 0\n};\nvar _hoisted_3 = [\"id\", \"aria-selected\", \"onClick\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = resolveComponent(\"el-input\");\n\n  var _component_loading = resolveComponent(\"loading\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n\n  var _component_el_popper = resolveComponent(\"el-popper\");\n\n  var _directive_clickoutside = resolveDirective(\"clickoutside\");\n\n  return openBlock(), createBlock(_component_el_popper, {\n    ref: \"popper\",\n    visible: _ctx.suggestionVisible,\n    \"onUpdate:visible\": _cache[2] || (_cache[2] = function ($event) {\n      return _ctx.suggestionVisible = $event;\n    }),\n    placement: _ctx.placement,\n    \"popper-class\": \"el-autocomplete__popper \".concat(_ctx.popperClass),\n    \"append-to-body\": _ctx.popperAppendToBody,\n    pure: \"\",\n    \"manual-mode\": \"\",\n    effect: _ctx.Effect.LIGHT,\n    trigger: \"click\",\n    transition: \"el-zoom-in-top\",\n    \"gpu-acceleration\": false\n  }, {\n    trigger: withCtx(function () {\n      return [withDirectives(createElementVNode(\"div\", {\n        \"class\": normalizeClass([\"el-autocomplete\", _ctx.$attrs[\"class\"]]),\n        style: normalizeStyle(_ctx.$attrs.style),\n        role: \"combobox\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-expanded\": _ctx.suggestionVisible,\n        \"aria-owns\": _ctx.id\n      }, [createVNode(_component_el_input, mergeProps({\n        ref: \"inputRef\"\n      }, _ctx.attrs, {\n        \"model-value\": _ctx.modelValue,\n        onInput: _ctx.handleInput,\n        onChange: _ctx.handleChange,\n        onFocus: _ctx.handleFocus,\n        onBlur: _ctx.handleBlur,\n        onClear: _ctx.handleClear,\n        onKeydown: [_cache[0] || (_cache[0] = withKeys(withModifiers(function ($event) {\n          return _ctx.highlight(_ctx.highlightedIndex - 1);\n        }, [\"prevent\"]), [\"up\"])), _cache[1] || (_cache[1] = withKeys(withModifiers(function ($event) {\n          return _ctx.highlight(_ctx.highlightedIndex + 1);\n        }, [\"prevent\"]), [\"down\"])), withKeys(_ctx.handleKeyEnter, [\"enter\"]), withKeys(_ctx.close, [\"tab\"])]\n      }), createSlots({\n        _: 2\n      }, [_ctx.$slots.prepend ? {\n        name: \"prepend\",\n        fn: withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"prepend\")];\n        })\n      } : void 0, _ctx.$slots.append ? {\n        name: \"append\",\n        fn: withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"append\")];\n        })\n      } : void 0, _ctx.$slots.prefix ? {\n        name: \"prefix\",\n        fn: withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"prefix\")];\n        })\n      } : void 0, _ctx.$slots.suffix ? {\n        name: \"suffix\",\n        fn: withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"suffix\")];\n        })\n      } : void 0]), 1040, [\"model-value\", \"onInput\", \"onChange\", \"onFocus\", \"onBlur\", \"onClear\", \"onKeydown\"])], 14, _hoisted_1), [[_directive_clickoutside, _ctx.close]])];\n    }),\n    \"default\": withCtx(function () {\n      return [createElementVNode(\"div\", {\n        ref: \"regionRef\",\n        \"class\": normalizeClass([\"el-autocomplete-suggestion\", _ctx.suggestionLoading && \"is-loading\"]),\n        style: normalizeStyle({\n          minWidth: _ctx.dropdownWidth,\n          outline: \"none\"\n        }),\n        role: \"region\"\n      }, [createVNode(_component_el_scrollbar, {\n        tag: \"ul\",\n        \"wrap-class\": \"el-autocomplete-suggestion__wrap\",\n        \"view-class\": \"el-autocomplete-suggestion__list\"\n      }, {\n        \"default\": withCtx(function () {\n          return [_ctx.suggestionLoading ? (openBlock(), createElementBlock(\"li\", _hoisted_2, [createVNode(_component_el_icon, {\n            \"class\": \"is-loading\"\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_loading)];\n            }),\n            _: 1\n          })])) : (openBlock(true), createElementBlock(Fragment, {\n            key: 1\n          }, renderList(_ctx.suggestions, function (item, index) {\n            return openBlock(), createElementBlock(\"li\", {\n              id: \"\".concat(_ctx.id, \"-item-\").concat(index),\n              key: index,\n              \"class\": normalizeClass({\n                highlighted: _ctx.highlightedIndex === index\n              }),\n              role: \"option\",\n              \"aria-selected\": _ctx.highlightedIndex === index,\n              onClick: function onClick($event) {\n                return _ctx.select(item);\n              }\n            }, [renderSlot(_ctx.$slots, \"default\", {\n              item: item\n            }, function () {\n              return [createTextVNode(toDisplayString(item[_ctx.valueKey]), 1)];\n            })], 10, _hoisted_3);\n          }), 128))];\n        }),\n        _: 3\n      })], 6)];\n    }),\n    _: 3\n  }, 8, [\"visible\", \"placement\", \"popper-class\", \"append-to-body\", \"effect\"]);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}