{"ast":null,"code":"import { defineComponent, getCurrentInstance, ref, computed, onMounted, nextTick, h } from 'vue';\nimport { ElCheckbox } from '../../../checkbox/index.mjs';\nimport '../filter-panel.mjs';\nimport useLayoutObserver from '../layout-observer.mjs';\nimport { hColgroup } from '../h-helper.mjs';\nimport useEvent from './event-helper.mjs';\nimport useStyle from './style.helper.mjs';\nimport useUtils from './utils-helper.mjs';\nimport script from '../filter-panel.vue_vue&type=script&lang.mjs';\nvar TableHeader = defineComponent({\n  name: \"ElTableHeader\",\n  components: {\n    ElCheckbox: ElCheckbox\n  },\n  props: {\n    fixed: {\n      type: String,\n      \"default\": \"\"\n    },\n    store: {\n      required: true,\n      type: Object\n    },\n    border: Boolean,\n    defaultSort: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          prop: \"\",\n          order: \"\"\n        };\n      }\n    }\n  },\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var instance = getCurrentInstance();\n    var parent = instance.parent;\n    var storeData = parent.store.states;\n    var filterPanels = ref({});\n\n    var _useLayoutObserver = useLayoutObserver(parent),\n        tableLayout = _useLayoutObserver.tableLayout,\n        onColumnsChange = _useLayoutObserver.onColumnsChange,\n        onScrollableChange = _useLayoutObserver.onScrollableChange;\n\n    var hasGutter = computed(function () {\n      return !props.fixed && tableLayout.gutterWidth;\n    });\n    onMounted(function () {\n      nextTick(function () {\n        var _props$defaultSort = props.defaultSort,\n            prop = _props$defaultSort.prop,\n            order = _props$defaultSort.order;\n        var init = true;\n        parent.store.commit(\"sort\", {\n          prop: prop,\n          order: order,\n          init: init\n        });\n      });\n    });\n\n    var _useEvent = useEvent(props, emit),\n        handleHeaderClick = _useEvent.handleHeaderClick,\n        handleHeaderContextMenu = _useEvent.handleHeaderContextMenu,\n        handleMouseDown = _useEvent.handleMouseDown,\n        handleMouseMove = _useEvent.handleMouseMove,\n        handleMouseOut = _useEvent.handleMouseOut,\n        handleSortClick = _useEvent.handleSortClick,\n        handleFilterClick = _useEvent.handleFilterClick;\n\n    var _useStyle = useStyle(props),\n        getHeaderRowStyle = _useStyle.getHeaderRowStyle,\n        getHeaderRowClass = _useStyle.getHeaderRowClass,\n        getHeaderCellStyle = _useStyle.getHeaderCellStyle,\n        getHeaderCellClass = _useStyle.getHeaderCellClass;\n\n    var _useUtils = useUtils(props),\n        isGroup = _useUtils.isGroup,\n        toggleAllSelection = _useUtils.toggleAllSelection,\n        columnRows = _useUtils.columnRows;\n\n    instance.state = {\n      onColumnsChange: onColumnsChange,\n      onScrollableChange: onScrollableChange\n    };\n    instance.filterPanels = filterPanels;\n    return {\n      columns: storeData.columns,\n      filterPanels: filterPanels,\n      hasGutter: hasGutter,\n      onColumnsChange: onColumnsChange,\n      onScrollableChange: onScrollableChange,\n      columnRows: columnRows,\n      getHeaderRowClass: getHeaderRowClass,\n      getHeaderRowStyle: getHeaderRowStyle,\n      getHeaderCellClass: getHeaderCellClass,\n      getHeaderCellStyle: getHeaderCellStyle,\n      handleHeaderClick: handleHeaderClick,\n      handleHeaderContextMenu: handleHeaderContextMenu,\n      handleMouseDown: handleMouseDown,\n      handleMouseMove: handleMouseMove,\n      handleMouseOut: handleMouseOut,\n      handleSortClick: handleSortClick,\n      handleFilterClick: handleFilterClick,\n      isGroup: isGroup,\n      toggleAllSelection: toggleAllSelection\n    };\n  },\n  render: function render() {\n    var _this = this;\n\n    return h(\"table\", {\n      border: \"0\",\n      cellpadding: \"0\",\n      cellspacing: \"0\",\n      \"class\": \"el-table__header\"\n    }, [hColgroup(this.columns, this.hasGutter), h(\"thead\", {\n      \"class\": {\n        \"is-group\": this.isGroup,\n        \"has-gutter\": this.hasGutter\n      }\n    }, this.columnRows.map(function (subColumns, rowIndex) {\n      return h(\"tr\", {\n        \"class\": _this.getHeaderRowClass(rowIndex),\n        key: rowIndex,\n        style: _this.getHeaderRowStyle(rowIndex)\n      }, subColumns.map(function (column, cellIndex) {\n        return h(\"th\", {\n          \"class\": _this.getHeaderCellClass(rowIndex, cellIndex, subColumns, column),\n          colspan: column.colSpan,\n          key: \"\".concat(column.id, \"-thead\"),\n          rowSpan: column.rowSpan,\n          style: _this.getHeaderCellStyle(rowIndex, cellIndex, subColumns, column),\n          onClick: function onClick($event) {\n            return _this.handleHeaderClick($event, column);\n          },\n          onContextmenu: function onContextmenu($event) {\n            return _this.handleHeaderContextMenu($event, column);\n          },\n          onMousedown: function onMousedown($event) {\n            return _this.handleMouseDown($event, column);\n          },\n          onMousemove: function onMousemove($event) {\n            return _this.handleMouseMove($event, column);\n          },\n          onMouseout: _this.handleMouseOut\n        }, [h(\"div\", {\n          \"class\": [\"cell\", column.filteredValue && column.filteredValue.length > 0 ? \"highlight\" : \"\", column.labelClassName]\n        }, [column.renderHeader ? column.renderHeader({\n          column: column,\n          $index: cellIndex,\n          store: _this.store,\n          _self: _this.$parent\n        }) : column.label, column.sortable && h(\"span\", {\n          onClick: function onClick($event) {\n            return _this.handleSortClick($event, column);\n          },\n          \"class\": \"caret-wrapper\"\n        }, [h(\"i\", {\n          onClick: function onClick($event) {\n            return _this.handleSortClick($event, column, \"ascending\");\n          },\n          \"class\": \"sort-caret ascending\"\n        }), h(\"i\", {\n          onClick: function onClick($event) {\n            return _this.handleSortClick($event, column, \"descending\");\n          },\n          \"class\": \"sort-caret descending\"\n        })]), column.filterable && h(script, {\n          store: _this.$parent.store,\n          placement: column.filterPlacement || \"bottom-start\",\n          column: column,\n          upDataColumn: function upDataColumn(key, value) {\n            column[key] = value;\n          }\n        })])]);\n      }));\n    }))]);\n  }\n});\nexport { TableHeader as default };","map":null,"metadata":{},"sourceType":"module"}