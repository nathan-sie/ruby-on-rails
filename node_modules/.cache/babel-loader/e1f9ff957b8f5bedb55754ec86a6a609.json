{"ast":null,"code":"import { defineComponent, ref, watch, watchEffect } from 'vue';\nimport { useOptions } from '../useOption.mjs';\nimport Color from '../color.mjs';\nvar script = defineComponent({\n  props: {\n    colors: {\n      type: Array,\n      required: true\n    },\n    color: {\n      type: Object,\n      required: true\n    }\n  },\n  setup: function setup(props) {\n    var _useOptions = useOptions(),\n        currentColor = _useOptions.currentColor;\n\n    var rgbaColors = ref(parseColors(props.colors, props.color));\n    watch(function () {\n      return currentColor.value;\n    }, function (val) {\n      var color = new Color();\n      color.fromString(val);\n      rgbaColors.value.forEach(function (item) {\n        item.selected = color.compare(item);\n      });\n    });\n    watchEffect(function () {\n      rgbaColors.value = parseColors(props.colors, props.color);\n    });\n\n    function handleSelect(index) {\n      props.color.fromString(props.colors[index]);\n    }\n\n    function parseColors(colors, color) {\n      return colors.map(function (value) {\n        var c = new Color();\n        c.enableAlpha = true;\n        c.format = \"rgba\";\n        c.fromString(value);\n        c.selected = c.value === color.value;\n        return c;\n      });\n    }\n\n    return {\n      rgbaColors: rgbaColors,\n      handleSelect: handleSelect\n    };\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}