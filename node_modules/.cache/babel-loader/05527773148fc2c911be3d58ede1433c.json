{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, withCtx, createVNode, resolveDynamicComponent, createCommentVNode, renderSlot } from 'vue';\nvar _hoisted_1 = [\"disabled\", \"autofocus\", \"type\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_loading = resolveComponent(\"loading\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  return openBlock(), createElementBlock(\"button\", {\n    \"class\": normalizeClass([\"el-button\", _ctx.buttonType ? \"el-button--\" + _ctx.buttonType : \"\", _ctx.buttonSize ? \"el-button--\" + _ctx.buttonSize : \"\", {\n      \"is-disabled\": _ctx.buttonDisabled,\n      \"is-loading\": _ctx.loading,\n      \"is-plain\": _ctx.plain,\n      \"is-round\": _ctx.round,\n      \"is-circle\": _ctx.circle\n    }]),\n    disabled: _ctx.buttonDisabled || _ctx.loading,\n    autofocus: _ctx.autofocus,\n    type: _ctx.nativeType,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);\n    })\n  }, [_ctx.loading ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    \"class\": \"is-loading\"\n  }, {\n    \"default\": withCtx(function () {\n      return [createVNode(_component_loading)];\n    }),\n    _: 1\n  })) : _ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 1\n  }, {\n    \"default\": withCtx(function () {\n      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))];\n    }),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), _ctx.$slots[\"default\"] ? (openBlock(), createElementBlock(\"span\", {\n    key: 2,\n    \"class\": normalizeClass({\n      \"el-button__text--expand\": _ctx.shouldAddSpace\n    })\n  }, [renderSlot(_ctx.$slots, \"default\")], 2)) : createCommentVNode(\"v-if\", true)], 10, _hoisted_1);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}