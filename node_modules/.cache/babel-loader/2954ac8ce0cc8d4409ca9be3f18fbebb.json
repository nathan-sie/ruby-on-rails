{"ast":null,"code":"import { defineComponent, computed } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { useGlobalConfig } from '../../../utils/util.mjs';\nimport { Close } from '@element-plus/icons';\nimport { tagProps, tagEmits } from './tag.mjs';\nvar script = defineComponent({\n  name: \"ElTag\",\n  components: {\n    ElIcon: ElIcon,\n    Close: Close\n  },\n  props: tagProps,\n  emits: tagEmits,\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var ELEMENT = useGlobalConfig();\n    var tagSize = computed(function () {\n      return props.size || ELEMENT.size;\n    });\n    var classes = computed(function () {\n      var type = props.type,\n          hit = props.hit,\n          effect = props.effect;\n      return [\"el-tag\", type ? \"el-tag--\".concat(type) : \"\", tagSize.value ? \"el-tag--\".concat(tagSize.value) : \"\", effect ? \"el-tag--\".concat(effect) : \"\", hit && \"is-hit\"];\n    });\n\n    var handleClose = function handleClose(event) {\n      event.stopPropagation();\n      emit(\"close\", event);\n    };\n\n    var handleClick = function handleClick(event) {\n      emit(\"click\", event);\n    };\n\n    return {\n      classes: classes,\n      handleClose: handleClose,\n      handleClick: handleClick\n    };\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}