{"ast":null,"code":"import { defineComponent, ref, watch, provide } from 'vue';\nimport { CHANGE_EVENT } from '../../../utils/constants.mjs';\nvar script = defineComponent({\n  name: \"ElSteps\",\n  props: {\n    space: {\n      type: [Number, String],\n      \"default\": \"\"\n    },\n    active: {\n      type: Number,\n      \"default\": 0\n    },\n    direction: {\n      type: String,\n      \"default\": \"horizontal\",\n      validator: function validator(val) {\n        return [\"horizontal\", \"vertical\"].includes(val);\n      }\n    },\n    alignCenter: {\n      type: Boolean,\n      \"default\": false\n    },\n    simple: {\n      type: Boolean,\n      \"default\": false\n    },\n    finishStatus: {\n      type: String,\n      \"default\": \"finish\",\n      validator: function validator(val) {\n        return [\"wait\", \"process\", \"finish\", \"error\", \"success\"].includes(val);\n      }\n    },\n    processStatus: {\n      type: String,\n      \"default\": \"process\",\n      validator: function validator(val) {\n        return [\"wait\", \"process\", \"finish\", \"error\", \"success\"].includes(val);\n      }\n    }\n  },\n  emits: [CHANGE_EVENT],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var steps = ref([]);\n    watch(steps, function () {\n      steps.value.forEach(function (instance, index) {\n        instance.setIndex(index);\n      });\n    });\n    provide(\"ElSteps\", {\n      props: props,\n      steps: steps\n    });\n    watch(function () {\n      return props.active;\n    }, function (newVal, oldVal) {\n      emit(CHANGE_EVENT, newVal, oldVal);\n    });\n    return {\n      steps: steps\n    };\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}