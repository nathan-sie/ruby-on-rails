{"ast":null,"code":"import { getCurrentInstance, ref, unref } from 'vue';\nimport { getRowIdentity } from '../util.mjs';\n\nfunction useCurrent(watcherData) {\n  var instance = getCurrentInstance();\n\n  var _currentRowKey = ref(null);\n\n  var currentRow = ref(null);\n\n  var setCurrentRowKey = function setCurrentRowKey(key) {\n    instance.store.assertRowKey();\n    _currentRowKey.value = key;\n    setCurrentRowByKey(key);\n  };\n\n  var restoreCurrentRowKey = function restoreCurrentRowKey() {\n    _currentRowKey.value = null;\n  };\n\n  var setCurrentRowByKey = function setCurrentRowByKey(key) {\n    var data = watcherData.data,\n        rowKey = watcherData.rowKey;\n    var _currentRow = null;\n\n    if (rowKey.value) {\n      _currentRow = (unref(data) || []).find(function (item) {\n        return getRowIdentity(item, rowKey.value) === key;\n      });\n    }\n\n    currentRow.value = _currentRow;\n  };\n\n  var updateCurrentRow = function updateCurrentRow(_currentRow) {\n    var oldCurrentRow = currentRow.value;\n\n    if (_currentRow && _currentRow !== oldCurrentRow) {\n      currentRow.value = _currentRow;\n      instance.emit(\"current-change\", currentRow.value, oldCurrentRow);\n      return;\n    }\n\n    if (!_currentRow && oldCurrentRow) {\n      currentRow.value = null;\n      instance.emit(\"current-change\", null, oldCurrentRow);\n    }\n  };\n\n  var updateCurrentRowData = function updateCurrentRowData() {\n    var rowKey = watcherData.rowKey.value;\n    var data = watcherData.data.value || [];\n    var oldCurrentRow = currentRow.value;\n\n    if (data.indexOf(oldCurrentRow) === -1 && oldCurrentRow) {\n      if (rowKey) {\n        var currentRowKey = getRowIdentity(oldCurrentRow, rowKey);\n        setCurrentRowByKey(currentRowKey);\n      } else {\n        currentRow.value = null;\n      }\n\n      if (currentRow.value === null) {\n        instance.emit(\"current-change\", null, oldCurrentRow);\n      }\n    } else if (_currentRowKey.value) {\n      setCurrentRowByKey(_currentRowKey.value);\n      restoreCurrentRowKey();\n    }\n  };\n\n  return {\n    setCurrentRowKey: setCurrentRowKey,\n    restoreCurrentRowKey: restoreCurrentRowKey,\n    setCurrentRowByKey: setCurrentRowByKey,\n    updateCurrentRow: updateCurrentRow,\n    updateCurrentRowData: updateCurrentRowData,\n    states: {\n      _currentRowKey: _currentRowKey,\n      currentRow: currentRow\n    }\n  };\n}\n\nexport { useCurrent as default };","map":null,"metadata":{},"sourceType":"module"}