{"ast":null,"code":"import { resolveComponent, resolveDirective, openBlock, createBlock, Teleport, createVNode, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, withModifiers, createElementBlock, renderSlot, toDisplayString, createCommentVNode, vShow } from 'vue';\nvar _hoisted_1 = [\"aria-label\"];\nvar _hoisted_2 = {\n  key: 0,\n  id: \"el-drawer__title\",\n  \"class\": \"el-drawer__header\"\n};\nvar _hoisted_3 = [\"title\"];\nvar _hoisted_4 = [\"aria-label\"];\nvar _hoisted_5 = {\n  key: 1,\n  \"class\": \"el-drawer__body\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_close = resolveComponent(\"close\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_el_overlay = resolveComponent(\"el-overlay\");\n\n  var _directive_trap_focus = resolveDirective(\"trap-focus\");\n\n  return openBlock(), createBlock(Teleport, {\n    to: \"body\",\n    disabled: !_ctx.appendToBody\n  }, [createVNode(Transition, {\n    name: \"el-drawer-fade\",\n    onAfterEnter: _ctx.afterEnter,\n    onAfterLeave: _ctx.afterLeave,\n    onBeforeLeave: _ctx.beforeLeave\n  }, {\n    \"default\": withCtx(function () {\n      return [withDirectives(createVNode(_component_el_overlay, {\n        mask: _ctx.modal,\n        \"overlay-class\": _ctx.modalClass,\n        \"z-index\": _ctx.zIndex,\n        onClick: _ctx.onModalClick\n      }, {\n        \"default\": withCtx(function () {\n          return [withDirectives(createElementVNode(\"div\", {\n            ref: \"drawerRef\",\n            \"aria-modal\": \"true\",\n            \"aria-labelledby\": \"el-drawer__title\",\n            \"aria-label\": _ctx.title,\n            \"class\": normalizeClass([\"el-drawer\", _ctx.direction, _ctx.visible && \"open\", _ctx.customClass]),\n            style: normalizeStyle(_ctx.isHorizontal ? \"width: \" + _ctx.drawerSize : \"height: \" + _ctx.drawerSize),\n            role: \"dialog\",\n            onClick: _cache[1] || (_cache[1] = withModifiers(function () {}, [\"stop\"]))\n          }, [_ctx.withHeader ? (openBlock(), createElementBlock(\"header\", _hoisted_2, [renderSlot(_ctx.$slots, \"title\", {}, function () {\n            return [createElementVNode(\"span\", {\n              role: \"heading\",\n              title: _ctx.title\n            }, toDisplayString(_ctx.title), 9, _hoisted_3)];\n          }), _ctx.showClose ? (openBlock(), createElementBlock(\"button\", {\n            key: 0,\n            \"aria-label\": \"close \" + (_ctx.title || \"drawer\"),\n            \"class\": \"el-drawer__close-btn\",\n            type: \"button\",\n            onClick: _cache[0] || (_cache[0] = function () {\n              return _ctx.handleClose && _ctx.handleClose.apply(_ctx, arguments);\n            })\n          }, [createVNode(_component_el_icon, {\n            \"class\": \"el-drawer__close\"\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_close)];\n            }),\n            _: 1\n          })], 8, _hoisted_4)) : createCommentVNode(\"v-if\", true)])) : createCommentVNode(\"v-if\", true), _ctx.rendered ? (openBlock(), createElementBlock(\"section\", _hoisted_5, [renderSlot(_ctx.$slots, \"default\")])) : createCommentVNode(\"v-if\", true)], 14, _hoisted_1), [[_directive_trap_focus]])];\n        }),\n        _: 3\n      }, 8, [\"mask\", \"overlay-class\", \"z-index\", \"onClick\"]), [[vShow, _ctx.visible]])];\n    }),\n    _: 3\n  }, 8, [\"onAfterEnter\", \"onAfterLeave\", \"onBeforeLeave\"])], 8, [\"disabled\"]);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}