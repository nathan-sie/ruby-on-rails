{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createBlock, withCtx, renderSlot, createElementVNode, Fragment } from 'vue';\nvar _hoisted_1 = {\n  style: {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    height: \"100%\",\n    width: \"100%\",\n    display: \"inline-block\",\n    boxSizing: \"border-box\",\n    padding: \"0 20px\"\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  return openBlock(), createElementBlock(\"li\", {\n    \"class\": normalizeClass([\"el-menu-item\", {\n      \"is-active\": _ctx.active,\n      \"is-disabled\": _ctx.disabled\n    }]),\n    role: \"menuitem\",\n    tabindex: \"-1\",\n    style: normalizeStyle(_ctx.paddingStyle),\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);\n    })\n  }, [_ctx.parentMenu.type.name === \"ElMenu\" && _ctx.rootMenu.props.collapse && _ctx.$slots.title ? (openBlock(), createBlock(_component_el_tooltip, {\n    key: 0,\n    effect: _ctx.Effect.DARK,\n    placement: \"right\"\n  }, {\n    content: withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"title\")];\n    }),\n    \"default\": withCtx(function () {\n      return [createElementVNode(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"default\")])];\n    }),\n    _: 3\n  }, 8, [\"effect\"])) : (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [renderSlot(_ctx.$slots, \"default\"), renderSlot(_ctx.$slots, \"title\")], 64))], 6);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}