{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, withKeys, withModifiers, createBlock, withCtx, renderSlot, createElementVNode } from 'vue';\nvar _hoisted_1 = [\"name\", \"multiple\", \"accept\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_upload_dragger = resolveComponent(\"upload-dragger\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    \"class\": normalizeClass([\"el-upload\", \"el-upload--\".concat(_ctx.listType)]),\n    tabindex: \"0\",\n    onClick: _cache[1] || (_cache[1] = function () {\n      return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);\n    }),\n    onKeydown: _cache[2] || (_cache[2] = withKeys(withModifiers(function () {\n      return _ctx.handleKeydown && _ctx.handleKeydown.apply(_ctx, arguments);\n    }, [\"self\"]), [\"enter\", \"space\"]))\n  }, [_ctx.drag ? (openBlock(), createBlock(_component_upload_dragger, {\n    key: 0,\n    disabled: _ctx.disabled,\n    onFile: _ctx.uploadFiles\n  }, {\n    \"default\": withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"default\")];\n    }),\n    _: 3\n  }, 8, [\"disabled\", \"onFile\"])) : renderSlot(_ctx.$slots, \"default\", {\n    key: 1\n  }), createElementVNode(\"input\", {\n    ref: \"inputRef\",\n    \"class\": \"el-upload__input\",\n    type: \"file\",\n    name: _ctx.name,\n    multiple: _ctx.multiple,\n    accept: _ctx.accept,\n    onChange: _cache[0] || (_cache[0] = function () {\n      return _ctx.handleChange && _ctx.handleChange.apply(_ctx, arguments);\n    })\n  }, null, 40, _hoisted_1)], 34);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}