{"ast":null,"code":"import { getCurrentInstance, computed } from 'vue';\nimport useMapState from './mapState-helper.mjs';\n\nfunction useStyle(props) {\n  var instance = getCurrentInstance();\n  var table = instance.parent;\n  var store = table.store;\n\n  var _useMapState = useMapState(),\n      leftFixedLeafCount = _useMapState.leftFixedLeafCount,\n      rightFixedLeafCount = _useMapState.rightFixedLeafCount,\n      columnsCount = _useMapState.columnsCount,\n      leftFixedCount = _useMapState.leftFixedCount,\n      rightFixedCount = _useMapState.rightFixedCount,\n      columns = _useMapState.columns;\n\n  var hasGutter = computed(function () {\n    return !props.fixed && !table.layout.gutterWidth;\n  });\n\n  var isCellHidden = function isCellHidden(index, columns2, column) {\n    if (props.fixed || props.fixed === \"left\") {\n      return index >= leftFixedLeafCount.value;\n    } else if (props.fixed === \"right\") {\n      var before = 0;\n\n      for (var i = 0; i < index; i++) {\n        before += columns2[i].colSpan;\n      }\n\n      return before < columnsCount.value - rightFixedLeafCount.value;\n    } else if (!props.fixed && column.fixed) {\n      return true;\n    } else {\n      return index < leftFixedCount.value || index >= columnsCount.value - rightFixedCount.value;\n    }\n  };\n\n  var getRowClasses = function getRowClasses(column, cellIndex) {\n    var classes = [column.id, column.align, column.labelClassName];\n\n    if (column.className) {\n      classes.push(column.className);\n    }\n\n    if (isCellHidden(cellIndex, store.states.columns.value, column)) {\n      classes.push(\"is-hidden\");\n    }\n\n    if (!column.children) {\n      classes.push(\"is-leaf\");\n    }\n\n    return classes;\n  };\n\n  return {\n    hasGutter: hasGutter,\n    getRowClasses: getRowClasses,\n    columns: columns\n  };\n}\n\nexport { useStyle as default };","map":null,"metadata":{},"sourceType":"module"}