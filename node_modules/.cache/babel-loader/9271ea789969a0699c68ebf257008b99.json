{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { inject, computed, getCurrentInstance, watch, toRaw, unref } from 'vue';\nimport { getValueByPath, escapeRegexpString } from '../../../utils/util.mjs';\nimport { selectKey, selectGroupKey } from './token.mjs';\n\nfunction useOption(props, states) {\n  var select = inject(selectKey);\n  var selectGroup = inject(selectGroupKey, {\n    disabled: false\n  });\n  var isObject = computed(function () {\n    return Object.prototype.toString.call(props.value).toLowerCase() === \"[object object]\";\n  });\n  var itemSelected = computed(function () {\n    if (!select.props.multiple) {\n      return isEqual(props.value, select.props.modelValue);\n    } else {\n      return contains(select.props.modelValue, props.value);\n    }\n  });\n  var limitReached = computed(function () {\n    if (select.props.multiple) {\n      var modelValue = select.props.modelValue || [];\n      return !itemSelected.value && modelValue.length >= select.props.multipleLimit && select.props.multipleLimit > 0;\n    } else {\n      return false;\n    }\n  });\n  var currentLabel = computed(function () {\n    return props.label || (isObject.value ? \"\" : props.value);\n  });\n  var currentValue = computed(function () {\n    return props.value || props.label || \"\";\n  });\n  var isDisabled = computed(function () {\n    return props.disabled || states.groupDisabled || limitReached.value;\n  });\n  var instance = getCurrentInstance();\n\n  var contains = function contains() {\n    var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var target = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (!isObject.value) {\n      return arr && arr.indexOf(target) > -1;\n    } else {\n      var valueKey = select.props.valueKey;\n      return arr && arr.some(function (item) {\n        return getValueByPath(item, valueKey) === getValueByPath(target, valueKey);\n      });\n    }\n  };\n\n  var isEqual = function isEqual(a, b) {\n    if (!isObject.value) {\n      return a === b;\n    } else {\n      var valueKey = select.props.valueKey;\n      return getValueByPath(a, valueKey) === getValueByPath(b, valueKey);\n    }\n  };\n\n  var hoverItem = function hoverItem() {\n    if (!props.disabled && !selectGroup.disabled) {\n      select.hoverIndex = select.optionsArray.indexOf(instance);\n    }\n  };\n\n  watch(function () {\n    return currentLabel.value;\n  }, function () {\n    if (!props.created && !select.props.remote) select.setSelected();\n  });\n  watch(function () {\n    return props.value;\n  }, function (val, oldVal) {\n    var _select$props = select.props,\n        remote = _select$props.remote,\n        valueKey = _select$props.valueKey;\n\n    if (!props.created && !remote) {\n      if (valueKey && _typeof(val) === \"object\" && _typeof(oldVal) === \"object\" && val[valueKey] === oldVal[valueKey]) {\n        return;\n      }\n\n      select.setSelected();\n    }\n  });\n  watch(function () {\n    return selectGroup.disabled;\n  }, function () {\n    states.groupDisabled = selectGroup.disabled;\n  }, {\n    immediate: true\n  });\n\n  var _toRaw = toRaw(select),\n      queryChange = _toRaw.queryChange;\n\n  watch(queryChange, function (changes) {\n    var _unref = unref(changes),\n        query = _unref.query;\n\n    var regexp = new RegExp(escapeRegexpString(query), \"i\");\n    states.visible = regexp.test(currentLabel.value) || props.created;\n\n    if (!states.visible) {\n      select.filteredOptionsCount--;\n    }\n  });\n  return {\n    select: select,\n    currentLabel: currentLabel,\n    currentValue: currentValue,\n    itemSelected: itemSelected,\n    isDisabled: isDisabled,\n    hoverItem: hoverItem\n  };\n}\n\nexport { useOption };","map":null,"metadata":{},"sourceType":"module"}