{"ast":null,"code":"import { defineComponent, ref, inject, computed, watch, getCurrentInstance } from 'vue';\nvar script = defineComponent({\n  name: \"ElTabPane\",\n  props: {\n    label: {\n      type: String,\n      \"default\": \"\"\n    },\n    name: {\n      type: String,\n      \"default\": \"\"\n    },\n    closable: Boolean,\n    disabled: Boolean,\n    lazy: Boolean\n  },\n  setup: function setup(props) {\n    var index = ref(null);\n    var loaded = ref(false);\n    var rootTabs = inject(\"rootTabs\");\n    var updatePaneState = inject(\"updatePaneState\");\n\n    if (!rootTabs || !updatePaneState) {\n      throw new Error(\"ElTabPane must use with ElTabs\");\n    }\n\n    var isClosable = computed(function () {\n      return props.closable || rootTabs.props.closable;\n    });\n    var active = computed(function () {\n      return rootTabs.currentName.value === (props.name || index.value);\n    });\n    var paneName = computed(function () {\n      return props.name || index.value;\n    });\n    var shouldBeRender = computed(function () {\n      return !props.lazy || loaded.value || active.value;\n    });\n    watch(active, function (val) {\n      if (val) loaded.value = true;\n    });\n    var instance = getCurrentInstance();\n    updatePaneState({\n      uid: instance.uid,\n      instance: instance,\n      props: props,\n      paneName: paneName,\n      active: active,\n      index: index,\n      isClosable: isClosable\n    });\n    return {\n      index: index,\n      loaded: loaded,\n      isClosable: isClosable,\n      active: active,\n      paneName: paneName,\n      shouldBeRender: shouldBeRender\n    };\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}