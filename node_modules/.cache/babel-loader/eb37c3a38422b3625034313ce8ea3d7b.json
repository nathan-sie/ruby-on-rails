{"ast":null,"code":"import { setConfig } from './utils/config.mjs';\nimport './hooks/index.mjs';\nimport { version } from './version.mjs';\nimport { localeProviderMaker, LocaleInjectionKey } from './hooks/use-locale/index.mjs';\n\nvar makeInstaller = function makeInstaller() {\n  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var apps = [];\n\n  var install = function install(app, opts) {\n    var defaultInstallOpt = {\n      size: \"\",\n      zIndex: 2e3\n    };\n    var option = Object.assign(defaultInstallOpt, opts);\n    if (apps.includes(app)) return;\n    apps.push(app);\n    components.forEach(function (c) {\n      app.use(c);\n    });\n\n    if (option.locale) {\n      var localeProvides = localeProviderMaker(opts.locale);\n      app.provide(LocaleInjectionKey, localeProvides);\n    }\n\n    app.config.globalProperties.$ELEMENT = option;\n    setConfig(option);\n  };\n\n  return {\n    version: version,\n    install: install\n  };\n};\n\nexport { makeInstaller as default };","map":null,"metadata":{},"sourceType":"module"}