{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { getCurrentInstance, computed } from 'vue';\nimport fromPairs from 'lodash/fromPairs';\nimport { debugWarn } from '../../utils/error.mjs';\nvar DEFAULT_EXCLUDE_KEYS = [\"class\", \"style\"];\nvar LISTENER_PREFIX = /^on[A-Z]/;\n\nvar useAttrs = function useAttrs() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _params$excludeListen = params.excludeListeners,\n      excludeListeners = _params$excludeListen === void 0 ? false : _params$excludeListen,\n      _params$excludeKeys = params.excludeKeys,\n      excludeKeys = _params$excludeKeys === void 0 ? [] : _params$excludeKeys;\n  var allExcludeKeys = excludeKeys.concat(DEFAULT_EXCLUDE_KEYS);\n  var instance = getCurrentInstance();\n\n  if (!instance) {\n    debugWarn(\"use-attrs\", \"getCurrentInstance() returned null. useAttrs() must be called at the top of a setup function\");\n    return computed(function () {\n      return {};\n    });\n  }\n\n  return computed(function () {\n    var _a;\n\n    return fromPairs(Object.entries((_a = instance.proxy) == null ? void 0 : _a.$attrs).filter(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          key = _ref2[0];\n\n      return !allExcludeKeys.includes(key) && !(excludeListeners && LISTENER_PREFIX.test(key));\n    }));\n  });\n};\n\nexport { useAttrs as default };","map":null,"metadata":{},"sourceType":"module"}