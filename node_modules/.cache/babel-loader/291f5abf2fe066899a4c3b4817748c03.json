{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { defineComponent, ref } from 'vue';\nimport '../../../directives/index.mjs';\nimport { ElOverlay } from '../../overlay/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { CloseComponents } from '../../../utils/icon.mjs';\nimport '../../../hooks/index.mjs';\nimport { dialogProps, dialogEmits } from './dialog.mjs';\nimport { useDialog } from './use-dialog.mjs';\nimport TrapFocus from '../../../directives/trap-focus/index.mjs';\nimport { useSameTarget } from '../../../hooks/use-same-target/index.mjs';\nvar script = defineComponent({\n  name: \"ElDialog\",\n  components: _objectSpread({\n    ElOverlay: ElOverlay,\n    ElIcon: ElIcon\n  }, CloseComponents),\n  directives: {\n    TrapFocus: TrapFocus\n  },\n  props: dialogProps,\n  emits: dialogEmits,\n  setup: function setup(props, ctx) {\n    var dialogRef = ref();\n    var dialog = useDialog(props, ctx, dialogRef);\n    var overlayEvent = useSameTarget(dialog.onModalClick);\n    return _objectSpread({\n      dialogRef: dialogRef,\n      overlayEvent: overlayEvent\n    }, dialog);\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}