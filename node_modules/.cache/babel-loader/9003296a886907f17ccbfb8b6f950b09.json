{"ast":null,"code":"import { defineComponent, computed } from 'vue';\nimport { UPDATE_MODEL_EVENT } from '../../../utils/constants.mjs';\nimport { useCheckboxProps, useCheckbox, useCheckboxGroup } from './useCheckbox.mjs';\nvar script = defineComponent({\n  name: \"ElCheckboxButton\",\n  props: useCheckboxProps,\n  emits: [UPDATE_MODEL_EVENT, \"change\"],\n  setup: function setup(props) {\n    var _useCheckbox = useCheckbox(props),\n        focus = _useCheckbox.focus,\n        isChecked = _useCheckbox.isChecked,\n        isDisabled = _useCheckbox.isDisabled,\n        size = _useCheckbox.size,\n        model = _useCheckbox.model,\n        handleChange = _useCheckbox.handleChange;\n\n    var _useCheckboxGroup = useCheckboxGroup(),\n        checkboxGroup = _useCheckboxGroup.checkboxGroup;\n\n    var activeStyle = computed(function () {\n      var _a, _b, _c, _d;\n\n      var fillValue = (_b = (_a = checkboxGroup == null ? void 0 : checkboxGroup.fill) == null ? void 0 : _a.value) != null ? _b : \"\";\n      return {\n        backgroundColor: fillValue,\n        borderColor: fillValue,\n        color: (_d = (_c = checkboxGroup == null ? void 0 : checkboxGroup.textColor) == null ? void 0 : _c.value) != null ? _d : \"\",\n        boxShadow: fillValue ? \"-1px 0 0 0 \".concat(fillValue) : null\n      };\n    });\n    return {\n      focus: focus,\n      isChecked: isChecked,\n      isDisabled: isDisabled,\n      model: model,\n      handleChange: handleChange,\n      activeStyle: activeStyle,\n      size: size\n    };\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}