{"ast":null,"code":"import { ref, h, Teleport, onUnmounted } from 'vue';\nimport { NOOP } from '@vue/shared';\nimport isServer from '../../utils/isServer.mjs';\nimport { createGlobalNode, removeGlobalNode } from '../../utils/global-nodes.mjs';\n\nvar useTeleport = function useTeleport(contentRenderer, appendToBody) {\n  var isTeleportVisible = ref(false);\n\n  if (isServer) {\n    return {\n      isTeleportVisible: isTeleportVisible,\n      showTeleport: NOOP,\n      hideTeleport: NOOP,\n      renderTeleport: NOOP\n    };\n  }\n\n  var $el = null;\n\n  var showTeleport = function showTeleport() {\n    isTeleportVisible.value = true;\n    if ($el !== null) return;\n    $el = createGlobalNode();\n  };\n\n  var hideTeleport = function hideTeleport() {\n    isTeleportVisible.value = false;\n\n    if ($el !== null) {\n      removeGlobalNode($el);\n      $el = null;\n    }\n  };\n\n  var renderTeleport = function renderTeleport() {\n    return appendToBody.value !== true ? contentRenderer() : isTeleportVisible.value ? [h(Teleport, {\n      to: $el\n    }, contentRenderer())] : void 0;\n  };\n\n  onUnmounted(hideTeleport);\n  return {\n    isTeleportVisible: isTeleportVisible,\n    showTeleport: showTeleport,\n    hideTeleport: hideTeleport,\n    renderTeleport: renderTeleport\n  };\n};\n\nexport { useTeleport as default };","map":null,"metadata":{},"sourceType":"module"}