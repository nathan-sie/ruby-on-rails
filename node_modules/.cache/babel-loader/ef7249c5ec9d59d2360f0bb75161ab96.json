{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { defineComponent, provide, ref, h } from 'vue';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport advancedFormat from 'dayjs/plugin/advancedFormat';\nimport localeData from 'dayjs/plugin/localeData';\nimport weekOfYear from 'dayjs/plugin/weekOfYear';\nimport weekYear from 'dayjs/plugin/weekYear';\nimport dayOfYear from 'dayjs/plugin/dayOfYear';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\nimport '../../time-picker/index.mjs';\nimport './date-picker-com/panel-date-pick.mjs';\nimport './date-picker-com/panel-date-range.mjs';\nimport './date-picker-com/panel-month-range.mjs';\nimport { ROOT_PICKER_INJECTION_KEY } from './date-picker.type.mjs';\nimport script from './date-picker-com/panel-date-range.vue_vue&type=script&lang.mjs';\nimport script$1 from './date-picker-com/panel-month-range.vue_vue&type=script&lang.mjs';\nimport script$2 from './date-picker-com/panel-date-pick.vue_vue&type=script&lang.mjs';\nimport { timePickerDefaultProps } from '../../time-picker/src/common/props.mjs';\nimport { DEFAULT_FORMATS_DATEPICKER, DEFAULT_FORMATS_DATE } from '../../time-picker/src/common/constant.mjs';\nimport script$3 from '../../time-picker/src/common/picker.vue_vue&type=script&lang.mjs';\ndayjs.extend(localeData);\ndayjs.extend(advancedFormat);\ndayjs.extend(customParseFormat);\ndayjs.extend(weekOfYear);\ndayjs.extend(weekYear);\ndayjs.extend(dayOfYear);\ndayjs.extend(isSameOrAfter);\ndayjs.extend(isSameOrBefore);\n\nvar getPanel = function getPanel(type) {\n  if (type === \"daterange\" || type === \"datetimerange\") {\n    return script;\n  } else if (type === \"monthrange\") {\n    return script$1;\n  }\n\n  return script$2;\n};\n\nvar DatePicker = defineComponent({\n  name: \"ElDatePicker\",\n  install: null,\n  props: _objectSpread(_objectSpread({}, timePickerDefaultProps), {}, {\n    type: {\n      type: String,\n      \"default\": \"date\"\n    }\n  }),\n  emits: [\"update:modelValue\"],\n  setup: function setup(props, ctx) {\n    provide(\"ElPopperOptions\", props.popperOptions);\n    provide(ROOT_PICKER_INJECTION_KEY, {\n      ctx: ctx\n    });\n    var commonPicker = ref(null);\n\n    var refProps = _objectSpread(_objectSpread({}, props), {}, {\n      focus: function focus() {\n        var _a;\n\n        (_a = commonPicker.value) == null ? void 0 : _a.handleFocus();\n      }\n    });\n\n    ctx.expose(refProps);\n    return function () {\n      var _a;\n\n      var format = (_a = props.format) != null ? _a : DEFAULT_FORMATS_DATEPICKER[props.type] || DEFAULT_FORMATS_DATE;\n      return h(script$3, _objectSpread(_objectSpread({}, props), {}, {\n        format: format,\n        type: props.type,\n        ref: commonPicker,\n        \"onUpdate:modelValue\": function onUpdateModelValue(value) {\n          return ctx.emit(\"update:modelValue\", value);\n        }\n      }), {\n        \"default\": function _default(scopedProps) {\n          return h(getPanel(props.type), scopedProps);\n        }\n      });\n    };\n  }\n});\nexport { DatePicker as default };","map":null,"metadata":{},"sourceType":"module"}