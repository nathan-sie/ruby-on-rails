{"ast":null,"code":"import { computed } from 'vue';\nimport { debugWarn } from '../../../utils/error.mjs';\n\nvar useStops = function useStops(props, initData, minValue, maxValue) {\n  var stops = computed(function () {\n    if (!props.showStops || props.min > props.max) return [];\n\n    if (props.step === 0) {\n      debugWarn(\"Slider\", \"step should not be 0.\");\n      return [];\n    }\n\n    var stopCount = (props.max - props.min) / props.step;\n    var stepWidth = 100 * props.step / (props.max - props.min);\n    var result = Array.from({\n      length: stopCount - 1\n    }).map(function (_, index) {\n      return (index + 1) * stepWidth;\n    });\n\n    if (props.range) {\n      return result.filter(function (step) {\n        return step < 100 * (minValue.value - props.min) / (props.max - props.min) || step > 100 * (maxValue.value - props.min) / (props.max - props.min);\n      });\n    } else {\n      return result.filter(function (step) {\n        return step > 100 * (initData.firstValue - props.min) / (props.max - props.min);\n      });\n    }\n  });\n\n  var getStopStyle = function getStopStyle(position) {\n    return props.vertical ? {\n      bottom: \"\".concat(position, \"%\")\n    } : {\n      left: \"\".concat(position, \"%\")\n    };\n  };\n\n  return {\n    stops: stops,\n    getStopStyle: getStopStyle\n  };\n};\n\nexport { useStops };","map":null,"metadata":{},"sourceType":"module"}