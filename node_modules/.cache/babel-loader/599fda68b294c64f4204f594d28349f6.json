{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, createElementVNode, normalizeClass, normalizeStyle, createBlock, resolveDynamicComponent, withCtx, renderSlot, Fragment, createVNode, createCommentVNode } from 'vue';\nvar _hoisted_1 = {\n  ref: \"scrollbar\",\n  \"class\": \"el-scrollbar\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_bar = resolveComponent(\"bar\");\n\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [createElementVNode(\"div\", {\n    ref: \"wrap\",\n    \"class\": normalizeClass([_ctx.wrapClass, \"el-scrollbar__wrap\", _ctx[\"native\"] ? \"\" : \"el-scrollbar__wrap--hidden-default\"]),\n    style: normalizeStyle(_ctx.style),\n    onScroll: _cache[0] || (_cache[0] = function () {\n      return _ctx.handleScroll && _ctx.handleScroll.apply(_ctx, arguments);\n    })\n  }, [(openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), {\n    ref: \"resize\",\n    \"class\": normalizeClass([\"el-scrollbar__view\", _ctx.viewClass]),\n    style: normalizeStyle(_ctx.viewStyle)\n  }, {\n    \"default\": withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"default\")];\n    }),\n    _: 3\n  }, 8, [\"class\", \"style\"]))], 38), !_ctx[\"native\"] ? (openBlock(), createElementBlock(Fragment, {\n    key: 0\n  }, [createVNode(_component_bar, {\n    move: _ctx.moveX,\n    ratio: _ctx.ratioX,\n    size: _ctx.sizeWidth,\n    always: _ctx.always\n  }, null, 8, [\"move\", \"ratio\", \"size\", \"always\"]), createVNode(_component_bar, {\n    move: _ctx.moveY,\n    ratio: _ctx.ratioY,\n    size: _ctx.sizeHeight,\n    vertical: \"\",\n    always: _ctx.always\n  }, null, 8, [\"move\", \"ratio\", \"size\", \"always\"])], 64)) : createCommentVNode(\"v-if\", true)], 512);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}