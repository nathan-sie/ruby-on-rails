{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, createCommentVNode, createElementVNode, normalizeStyle, createVNode, Fragment, renderList } from 'vue';\nvar _hoisted_1 = [\"aria-valuemin\", \"aria-valuemax\", \"aria-orientation\", \"aria-disabled\"];\nvar _hoisted_2 = {\n  key: 1\n};\nvar _hoisted_3 = {\n  \"class\": \"el-slider__marks\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input_number = resolveComponent(\"el-input-number\");\n\n  var _component_slider_button = resolveComponent(\"slider-button\");\n\n  var _component_slider_marker = resolveComponent(\"slider-marker\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"sliderWrapper\",\n    \"class\": normalizeClass([\"el-slider\", {\n      \"is-vertical\": _ctx.vertical,\n      \"el-slider--with-input\": _ctx.showInput\n    }]),\n    role: \"slider\",\n    \"aria-valuemin\": _ctx.min,\n    \"aria-valuemax\": _ctx.max,\n    \"aria-orientation\": _ctx.vertical ? \"vertical\" : \"horizontal\",\n    \"aria-disabled\": _ctx.sliderDisabled\n  }, [_ctx.showInput && !_ctx.range ? (openBlock(), createBlock(_component_el_input_number, {\n    key: 0,\n    ref: \"input\",\n    \"model-value\": _ctx.firstValue,\n    \"class\": \"el-slider__input\",\n    step: _ctx.step,\n    disabled: _ctx.sliderDisabled,\n    controls: _ctx.showInputControls,\n    min: _ctx.min,\n    max: _ctx.max,\n    debounce: _ctx.debounce,\n    size: _ctx.inputSize,\n    \"onUpdate:modelValue\": _ctx.setFirstValue,\n    onChange: _ctx.emitChange\n  }, null, 8, [\"model-value\", \"step\", \"disabled\", \"controls\", \"min\", \"max\", \"debounce\", \"size\", \"onUpdate:modelValue\", \"onChange\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n    ref: \"slider\",\n    \"class\": normalizeClass([\"el-slider__runway\", {\n      \"show-input\": _ctx.showInput && !_ctx.range,\n      disabled: _ctx.sliderDisabled\n    }]),\n    style: normalizeStyle(_ctx.runwayStyle),\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.onSliderClick && _ctx.onSliderClick.apply(_ctx, arguments);\n    })\n  }, [createElementVNode(\"div\", {\n    \"class\": \"el-slider__bar\",\n    style: normalizeStyle(_ctx.barStyle)\n  }, null, 4), createVNode(_component_slider_button, {\n    ref: \"firstButton\",\n    \"model-value\": _ctx.firstValue,\n    vertical: _ctx.vertical,\n    \"tooltip-class\": _ctx.tooltipClass,\n    \"onUpdate:modelValue\": _ctx.setFirstValue\n  }, null, 8, [\"model-value\", \"vertical\", \"tooltip-class\", \"onUpdate:modelValue\"]), _ctx.range ? (openBlock(), createBlock(_component_slider_button, {\n    key: 0,\n    ref: \"secondButton\",\n    \"model-value\": _ctx.secondValue,\n    vertical: _ctx.vertical,\n    \"tooltip-class\": _ctx.tooltipClass,\n    \"onUpdate:modelValue\": _ctx.setSecondValue\n  }, null, 8, [\"model-value\", \"vertical\", \"tooltip-class\", \"onUpdate:modelValue\"])) : createCommentVNode(\"v-if\", true), _ctx.showStops ? (openBlock(), createElementBlock(\"div\", _hoisted_2, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.stops, function (item, key) {\n    return openBlock(), createElementBlock(\"div\", {\n      key: key,\n      \"class\": \"el-slider__stop\",\n      style: normalizeStyle(_ctx.getStopStyle(item))\n    }, null, 4);\n  }), 128))])) : createCommentVNode(\"v-if\", true), _ctx.markList.length > 0 ? (openBlock(), createElementBlock(Fragment, {\n    key: 2\n  }, [createElementVNode(\"div\", null, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.markList, function (item, key) {\n    return openBlock(), createElementBlock(\"div\", {\n      key: key,\n      style: normalizeStyle(_ctx.getStopStyle(item.position)),\n      \"class\": \"el-slider__stop el-slider__marks-stop\"\n    }, null, 4);\n  }), 128))]), createElementVNode(\"div\", _hoisted_3, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.markList, function (item, key) {\n    return openBlock(), createBlock(_component_slider_marker, {\n      key: key,\n      mark: item.mark,\n      style: normalizeStyle(_ctx.getStopStyle(item.position))\n    }, null, 8, [\"mark\", \"style\"]);\n  }), 128))])], 64)) : createCommentVNode(\"v-if\", true)], 6)], 10, _hoisted_1);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}