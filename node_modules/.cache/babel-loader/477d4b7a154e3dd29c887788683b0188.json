{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, withCtx, createVNode, normalizeStyle, createElementVNode, toDisplayString } from 'vue';\nvar _hoisted_1 = {\n  key: 1,\n  \"class\": \"el-tree__empty-block\"\n};\nvar _hoisted_2 = {\n  \"class\": \"el-tree__empty-text\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _a;\n\n  var _component_el_tree_node = resolveComponent(\"el-tree-node\");\n\n  var _component_fixed_size_list = resolveComponent(\"fixed-size-list\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    \"class\": normalizeClass([\"el-tree\", {\n      \"el-tree--highlight-current\": _ctx.highlightCurrent\n    }]),\n    role: \"tree\"\n  }, [_ctx.isNotEmpty ? (openBlock(), createBlock(_component_fixed_size_list, {\n    key: 0,\n    \"class-name\": \"el-tree-virtual-list\",\n    data: _ctx.flattenTree,\n    total: _ctx.flattenTree.length,\n    height: _ctx.height,\n    \"item-size\": _ctx.itemSize,\n    \"perf-mode\": _ctx.perfMode\n  }, {\n    \"default\": withCtx(function (_ref) {\n      var data = _ref.data,\n          index = _ref.index,\n          style = _ref.style;\n      return [createVNode(_component_el_tree_node, {\n        key: data[index].key,\n        style: normalizeStyle(style),\n        node: data[index],\n        expanded: _ctx.isExpanded(data[index]),\n        \"show-checkbox\": _ctx.showCheckbox,\n        checked: _ctx.isChecked(data[index]),\n        indeterminate: _ctx.isIndeterminate(data[index]),\n        disabled: _ctx.isDisabled(data[index]),\n        current: _ctx.isCurrent(data[index]),\n        \"hidden-expand-icon\": _ctx.isForceHiddenExpandIcon(data[index]),\n        onClick: _ctx.handleNodeClick,\n        onToggle: _ctx.toggleExpand,\n        onCheck: _ctx.handleNodeCheck\n      }, null, 8, [\"style\", \"node\", \"expanded\", \"show-checkbox\", \"checked\", \"indeterminate\", \"disabled\", \"current\", \"hidden-expand-icon\", \"onClick\", \"onToggle\", \"onCheck\"])];\n    }),\n    _: 1\n  }, 8, [\"data\", \"total\", \"height\", \"item-size\", \"perf-mode\"])) : (openBlock(), createElementBlock(\"div\", _hoisted_1, [createElementVNode(\"span\", _hoisted_2, toDisplayString((_a = _ctx.emptyText) != null ? _a : _ctx.t(\"el.tree.emptyText\")), 1)]))], 2);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}