{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\n\nfunction useThrottleRender(loading) {\n  var throttle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (throttle === 0) return loading;\n  var throttled = ref(false);\n  var timeoutHandle = 0;\n\n  var dispatchThrottling = function dispatchThrottling() {\n    if (timeoutHandle) {\n      clearTimeout(timeoutHandle);\n    }\n\n    timeoutHandle = window.setTimeout(function () {\n      throttled.value = loading.value;\n    }, throttle);\n  };\n\n  onMounted(dispatchThrottling);\n  watch(function () {\n    return loading.value;\n  }, function (val) {\n    if (val) {\n      dispatchThrottling();\n    } else {\n      throttled.value = val;\n    }\n  });\n  return throttled;\n}\n\nexport { useThrottleRender as default };","map":null,"metadata":{},"sourceType":"module"}