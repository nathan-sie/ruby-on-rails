{"ast":null,"code":"import { defineComponent, ref, computed } from 'vue';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport _Popper from '../../popper/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { popconfirmProps, popconfirmEmits } from './popconfirm.mjs';\nimport { useLocaleInject } from '../../../hooks/use-locale/index.mjs';\nimport { Effect } from '../../popper/src/use-popper/defaults.mjs';\nvar script = defineComponent({\n  name: \"ElPopconfirm\",\n  components: {\n    ElButton: ElButton,\n    ElPopper: _Popper,\n    ElIcon: ElIcon\n  },\n  props: popconfirmProps,\n  emits: popconfirmEmits,\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n\n    var _useLocaleInject = useLocaleInject(),\n        t = _useLocaleInject.t;\n\n    var visible = ref(false);\n\n    var confirm = function confirm() {\n      visible.value = false;\n      emit(\"confirm\");\n    };\n\n    var cancel = function cancel() {\n      visible.value = false;\n      emit(\"cancel\");\n    };\n\n    var finalConfirmButtonText = computed(function () {\n      return props.confirmButtonText || t(\"el.popconfirm.confirmButtonText\");\n    });\n    var finalCancelButtonText = computed(function () {\n      return props.cancelButtonText || t(\"el.popconfirm.cancelButtonText\");\n    });\n    return {\n      Effect: Effect,\n      visible: visible,\n      finalConfirmButtonText: finalConfirmButtonText,\n      finalCancelButtonText: finalCancelButtonText,\n      confirm: confirm,\n      cancel: cancel\n    };\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}