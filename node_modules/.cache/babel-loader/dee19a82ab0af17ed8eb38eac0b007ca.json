{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, createVNode, withCtx, Fragment, renderList, createBlock } from 'vue';\nvar _hoisted_1 = {\n  \"class\": \"el-pagination__sizes\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_option = resolveComponent(\"el-option\");\n\n  var _component_el_select = resolveComponent(\"el-select\");\n\n  return openBlock(), createElementBlock(\"span\", _hoisted_1, [createVNode(_component_el_select, {\n    \"model-value\": _ctx.innerPageSize,\n    disabled: _ctx.disabled,\n    \"popper-class\": _ctx.popperClass,\n    size: \"mini\",\n    onChange: _ctx.handleChange\n  }, {\n    \"default\": withCtx(function () {\n      return [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.innerPagesizes, function (item) {\n        return openBlock(), createBlock(_component_el_option, {\n          key: item,\n          value: item,\n          label: item + _ctx.t(\"el.pagination.pagesize\")\n        }, null, 8, [\"value\", \"label\"]);\n      }), 128))];\n    }),\n    _: 1\n  }, 8, [\"model-value\", \"disabled\", \"popper-class\", \"onChange\"])]);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}