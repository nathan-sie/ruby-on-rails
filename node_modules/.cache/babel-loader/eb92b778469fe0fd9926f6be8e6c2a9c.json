{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, renderSlot } from 'vue';\nvar _hoisted_1 = [\"src\", \"alt\", \"srcset\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  return openBlock(), createElementBlock(\"span\", {\n    \"class\": normalizeClass(_ctx.avatarClass),\n    style: normalizeStyle(_ctx.sizeStyle)\n  }, [(_ctx.src || _ctx.srcSet) && !_ctx.hasLoadError ? (openBlock(), createElementBlock(\"img\", {\n    key: 0,\n    src: _ctx.src,\n    alt: _ctx.alt,\n    srcset: _ctx.srcSet,\n    style: normalizeStyle(_ctx.fitStyle),\n    onError: _cache[0] || (_cache[0] = function () {\n      return _ctx.handleError && _ctx.handleError.apply(_ctx, arguments);\n    })\n  }, null, 44, _hoisted_1)) : _ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 1\n  }, {\n    \"default\": withCtx(function () {\n      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))];\n    }),\n    _: 1\n  })) : renderSlot(_ctx.$slots, \"default\", {\n    key: 2\n  })], 6);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}