{"ast":null,"code":"import { resolveComponent, resolveDirective, openBlock, createBlock, Teleport, createVNode, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, withModifiers, renderSlot, toDisplayString, createElementBlock, createCommentVNode, vShow } from 'vue';\nvar _hoisted_1 = [\"aria-label\"];\nvar _hoisted_2 = {\n  \"class\": \"el-dialog__header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"el-dialog__title\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"el-dialog__body\"\n};\nvar _hoisted_5 = {\n  key: 1,\n  \"class\": \"el-dialog__footer\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_close = resolveComponent(\"close\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_el_overlay = resolveComponent(\"el-overlay\");\n\n  var _directive_trap_focus = resolveDirective(\"trap-focus\");\n\n  return openBlock(), createBlock(Teleport, {\n    to: \"body\",\n    disabled: !_ctx.appendToBody\n  }, [createVNode(Transition, {\n    name: \"dialog-fade\",\n    onAfterEnter: _ctx.afterEnter,\n    onAfterLeave: _ctx.afterLeave,\n    onBeforeLeave: _ctx.beforeLeave\n  }, {\n    \"default\": withCtx(function () {\n      return [withDirectives(createVNode(_component_el_overlay, {\n        \"custom-mask-event\": \"\",\n        mask: _ctx.modal,\n        \"overlay-class\": _ctx.modalClass,\n        \"z-index\": _ctx.zIndex\n      }, {\n        \"default\": withCtx(function () {\n          return [createElementVNode(\"div\", {\n            \"class\": \"el-overlay-dialog\",\n            onClick: _cache[2] || (_cache[2] = function () {\n              var _ctx$overlayEvent;\n\n              return _ctx.overlayEvent.onClick && (_ctx$overlayEvent = _ctx.overlayEvent).onClick.apply(_ctx$overlayEvent, arguments);\n            }),\n            onMousedown: _cache[3] || (_cache[3] = function () {\n              var _ctx$overlayEvent2;\n\n              return _ctx.overlayEvent.onMousedown && (_ctx$overlayEvent2 = _ctx.overlayEvent).onMousedown.apply(_ctx$overlayEvent2, arguments);\n            }),\n            onMouseup: _cache[4] || (_cache[4] = function () {\n              var _ctx$overlayEvent3;\n\n              return _ctx.overlayEvent.onMouseup && (_ctx$overlayEvent3 = _ctx.overlayEvent).onMouseup.apply(_ctx$overlayEvent3, arguments);\n            })\n          }, [withDirectives(createElementVNode(\"div\", {\n            ref: \"dialogRef\",\n            \"class\": normalizeClass([\"el-dialog\", {\n              \"is-fullscreen\": _ctx.fullscreen,\n              \"el-dialog--center\": _ctx.center\n            }, _ctx.customClass]),\n            \"aria-modal\": \"true\",\n            role: \"dialog\",\n            \"aria-label\": _ctx.title || \"dialog\",\n            style: normalizeStyle(_ctx.style),\n            onClick: _cache[1] || (_cache[1] = withModifiers(function () {}, [\"stop\"]))\n          }, [createElementVNode(\"div\", _hoisted_2, [renderSlot(_ctx.$slots, \"title\", {}, function () {\n            return [createElementVNode(\"span\", _hoisted_3, toDisplayString(_ctx.title), 1)];\n          }), _ctx.showClose ? (openBlock(), createElementBlock(\"button\", {\n            key: 0,\n            \"aria-label\": \"close\",\n            \"class\": \"el-dialog__headerbtn\",\n            type: \"button\",\n            onClick: _cache[0] || (_cache[0] = function () {\n              return _ctx.handleClose && _ctx.handleClose.apply(_ctx, arguments);\n            })\n          }, [createVNode(_component_el_icon, {\n            \"class\": \"el-dialog__close\"\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_close)];\n            }),\n            _: 1\n          })])) : createCommentVNode(\"v-if\", true)]), _ctx.rendered ? (openBlock(), createElementBlock(\"div\", _hoisted_4, [renderSlot(_ctx.$slots, \"default\")])) : createCommentVNode(\"v-if\", true), _ctx.$slots.footer ? (openBlock(), createElementBlock(\"div\", _hoisted_5, [renderSlot(_ctx.$slots, \"footer\")])) : createCommentVNode(\"v-if\", true)], 14, _hoisted_1), [[_directive_trap_focus]])], 32)];\n        }),\n        _: 3\n      }, 8, [\"mask\", \"overlay-class\", \"z-index\"]), [[vShow, _ctx.visible]])];\n    }),\n    _: 3\n  }, 8, [\"onAfterEnter\", \"onAfterLeave\", \"onBeforeLeave\"])], 8, [\"disabled\"]);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}