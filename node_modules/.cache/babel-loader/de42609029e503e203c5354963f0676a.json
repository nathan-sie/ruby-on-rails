{"ast":null,"code":"import { defineComponent, getCurrentInstance, inject, toRef, computed, reactive, onMounted, onBeforeUnmount } from 'vue';\nimport _Tooltip from '../../tooltip/index.mjs';\nimport '../../popper/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport useMenu from './use-menu.mjs';\nimport { menuItemProps, menuItemEmits } from './menu-item.mjs';\nimport { Effect } from '../../popper/src/use-popper/defaults.mjs';\nvar COMPONENT_NAME = \"ElMenuItem\";\nvar script = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElTooltip: _Tooltip\n  },\n  props: menuItemProps,\n  emits: menuItemEmits,\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var instance = getCurrentInstance();\n    var rootMenu = inject(\"rootMenu\");\n    if (!rootMenu) throwError(COMPONENT_NAME, \"can not inject root menu\");\n\n    var _useMenu = useMenu(instance, toRef(props, \"index\")),\n        parentMenu = _useMenu.parentMenu,\n        paddingStyle = _useMenu.paddingStyle,\n        indexPath = _useMenu.indexPath;\n\n    var subMenu = inject(\"subMenu:\".concat(parentMenu.value.uid));\n    if (!subMenu) throwError(COMPONENT_NAME, \"can not inject sub menu\");\n    var active = computed(function () {\n      return props.index === rootMenu.activeIndex;\n    });\n    var item = reactive({\n      index: props.index,\n      indexPath: indexPath,\n      active: active\n    });\n\n    var handleClick = function handleClick() {\n      if (!props.disabled) {\n        rootMenu.handleMenuItemClick({\n          index: props.index,\n          indexPath: indexPath.value,\n          route: props.route\n        });\n        emit(\"click\", item);\n      }\n    };\n\n    onMounted(function () {\n      subMenu.addSubMenu(item);\n      rootMenu.addMenuItem(item);\n    });\n    onBeforeUnmount(function () {\n      subMenu.removeSubMenu(item);\n      rootMenu.removeMenuItem(item);\n    });\n    return {\n      Effect: Effect,\n      parentMenu: parentMenu,\n      rootMenu: rootMenu,\n      paddingStyle: paddingStyle,\n      active: active,\n      handleClick: handleClick\n    };\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}