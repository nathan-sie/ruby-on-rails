{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { ref, watchEffect, watch, unref, computed, onMounted, nextTick, onUnmounted } from 'vue';\nimport throttle from 'lodash/throttle';\nimport { addResizeListener, removeResizeListener } from '../../../../utils/resize-event.mjs';\nimport { useGlobalConfig } from '../../../../utils/util.mjs';\nimport { on, off } from '../../../../utils/dom.mjs';\nimport { parseHeight } from '../util.mjs';\n\nfunction useStyle(props, layout, store, table) {\n  var $ELEMENT = useGlobalConfig();\n  var isHidden = ref(false);\n  var renderExpanded = ref(null);\n  var resizeProxyVisible = ref(false);\n\n  var setDragVisible = function setDragVisible(visible) {\n    resizeProxyVisible.value = visible;\n  };\n\n  var resizeState = ref({\n    width: null,\n    height: null\n  });\n  var isGroup = ref(false);\n  watchEffect(function () {\n    layout.setHeight(props.height);\n  });\n  watchEffect(function () {\n    layout.setMaxHeight(props.maxHeight);\n  });\n  watch(function () {\n    return [props.currentRowKey, store.states.rowKey];\n  }, function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        currentRowKey = _ref2[0],\n        rowKey = _ref2[1];\n\n    if (!unref(rowKey)) return;\n    store.setCurrentRowKey(\"\".concat(currentRowKey));\n  }, {\n    immediate: true\n  });\n  watch(function () {\n    return props.data;\n  }, function (data) {\n    table.store.commit(\"setData\", data);\n  }, {\n    immediate: true,\n    deep: true\n  });\n  watchEffect(function () {\n    if (props.expandRowKeys) {\n      store.setExpandRowKeysAdapter(props.expandRowKeys);\n    }\n  });\n\n  var handleMouseLeave = function handleMouseLeave() {\n    table.store.commit(\"setHoverRow\", null);\n    if (table.hoverState) table.hoverState = null;\n  };\n\n  var handleHeaderFooterMousewheel = function handleHeaderFooterMousewheel(event, data) {\n    var pixelX = data.pixelX,\n        pixelY = data.pixelY;\n\n    if (Math.abs(pixelX) >= Math.abs(pixelY)) {\n      table.refs.bodyWrapper.scrollLeft += data.pixelX / 5;\n    }\n  };\n\n  var shouldUpdateHeight = computed(function () {\n    return props.height || props.maxHeight || store.states.fixedColumns.value.length > 0 || store.states.rightFixedColumns.value.length > 0;\n  });\n\n  var doLayout = function doLayout() {\n    if (shouldUpdateHeight.value) {\n      layout.updateElsHeight();\n    }\n\n    layout.updateColumnsWidth();\n    requestAnimationFrame(syncPostion);\n  };\n\n  onMounted( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setScrollClass(\"is-scrolling-left\");\n            store.updateColumns();\n            _context.next = 4;\n            return nextTick();\n\n          case 4:\n            bindEvents();\n            requestAnimationFrame(doLayout);\n            resizeState.value = {\n              width: table.vnode.el.offsetWidth,\n              height: table.vnode.el.offsetHeight\n            };\n            store.states.columns.value.forEach(function (column) {\n              if (column.filteredValue && column.filteredValue.length) {\n                table.store.commit(\"filterChange\", {\n                  column: column,\n                  values: column.filteredValue,\n                  silent: true\n                });\n              }\n            });\n            table.$ready = true;\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n\n  var setScrollClassByEl = function setScrollClassByEl(el, className) {\n    if (!el) return;\n    var classList = Array.from(el.classList).filter(function (item) {\n      return !item.startsWith(\"is-scrolling-\");\n    });\n    classList.push(layout.scrollX.value ? className : \"is-scrolling-none\");\n    el.className = classList.join(\" \");\n  };\n\n  var setScrollClass = function setScrollClass(className) {\n    var bodyWrapper = table.refs.bodyWrapper;\n    setScrollClassByEl(bodyWrapper, className);\n  };\n\n  var syncPostion = throttle(function () {\n    if (!table.refs.bodyWrapper) return;\n    var _table$refs$bodyWrapp = table.refs.bodyWrapper,\n        scrollLeft = _table$refs$bodyWrapp.scrollLeft,\n        scrollTop = _table$refs$bodyWrapp.scrollTop,\n        offsetWidth = _table$refs$bodyWrapp.offsetWidth,\n        scrollWidth = _table$refs$bodyWrapp.scrollWidth;\n    var _table$refs = table.refs,\n        headerWrapper = _table$refs.headerWrapper,\n        footerWrapper = _table$refs.footerWrapper,\n        fixedBodyWrapper = _table$refs.fixedBodyWrapper,\n        rightFixedBodyWrapper = _table$refs.rightFixedBodyWrapper;\n    if (headerWrapper) headerWrapper.scrollLeft = scrollLeft;\n    if (footerWrapper) footerWrapper.scrollLeft = scrollLeft;\n    if (fixedBodyWrapper) fixedBodyWrapper.scrollTop = scrollTop;\n    if (rightFixedBodyWrapper) rightFixedBodyWrapper.scrollTop = scrollTop;\n    var maxScrollLeftPosition = scrollWidth - offsetWidth - 1;\n\n    if (scrollLeft >= maxScrollLeftPosition) {\n      setScrollClass(\"is-scrolling-right\");\n    } else if (scrollLeft === 0) {\n      setScrollClass(\"is-scrolling-left\");\n    } else {\n      setScrollClass(\"is-scrolling-middle\");\n    }\n  }, 10);\n\n  var bindEvents = function bindEvents() {\n    table.refs.bodyWrapper.addEventListener(\"scroll\", syncPostion, {\n      passive: true\n    });\n\n    if (props.fit) {\n      addResizeListener(table.vnode.el, resizeListener);\n    } else {\n      on(window, \"resize\", doLayout);\n    }\n  };\n\n  onUnmounted(function () {\n    unbindEvents();\n  });\n\n  var unbindEvents = function unbindEvents() {\n    var _a;\n\n    (_a = table.refs.bodyWrapper) == null ? void 0 : _a.removeEventListener(\"scroll\", syncPostion, true);\n\n    if (props.fit) {\n      removeResizeListener(table.vnode.el, resizeListener);\n    } else {\n      off(window, \"resize\", doLayout);\n    }\n  };\n\n  var resizeListener = function resizeListener() {\n    if (!table.$ready) return;\n    var shouldUpdateLayout = false;\n    var el = table.vnode.el;\n    var _resizeState$value = resizeState.value,\n        oldWidth = _resizeState$value.width,\n        oldHeight = _resizeState$value.height;\n    var width = el.offsetWidth;\n\n    if (oldWidth !== width) {\n      shouldUpdateLayout = true;\n    }\n\n    var height = el.offsetHeight;\n\n    if ((props.height || shouldUpdateHeight.value) && oldHeight !== height) {\n      shouldUpdateLayout = true;\n    }\n\n    if (shouldUpdateLayout) {\n      resizeState.value = {\n        width: width,\n        height: height\n      };\n      doLayout();\n    }\n  };\n\n  var tableSize = computed(function () {\n    return props.size || $ELEMENT.size;\n  });\n  var bodyWidth = computed(function () {\n    var bodyWidth_ = layout.bodyWidth,\n        scrollY = layout.scrollY,\n        gutterWidth = layout.gutterWidth;\n    return bodyWidth_.value ? \"\".concat(bodyWidth_.value - (scrollY.value ? gutterWidth : 0), \"px\") : \"\";\n  });\n  var bodyHeight = computed(function () {\n    var headerHeight = layout.headerHeight.value || 0;\n    var bodyHeight2 = layout.bodyHeight.value;\n    var footerHeight = layout.footerHeight.value || 0;\n\n    if (props.height) {\n      return {\n        height: bodyHeight2 ? \"\".concat(bodyHeight2, \"px\") : \"\"\n      };\n    } else if (props.maxHeight) {\n      var maxHeight = parseHeight(props.maxHeight);\n\n      if (typeof maxHeight === \"number\") {\n        return {\n          \"max-height\": \"\".concat(maxHeight - footerHeight - (props.showHeader ? headerHeight : 0), \"px\")\n        };\n      }\n    }\n\n    return {};\n  });\n  var emptyBlockStyle = computed(function () {\n    if (props.data && props.data.length) return null;\n    var height = \"100%\";\n\n    if (layout.appendHeight.value) {\n      height = \"calc(100% - \".concat(layout.appendHeight.value, \"px)\");\n    }\n\n    return {\n      width: bodyWidth.value,\n      height: height\n    };\n  });\n\n  var handleFixedMousewheel = function handleFixedMousewheel(event, data) {\n    var bodyWrapper = table.refs.bodyWrapper;\n\n    if (Math.abs(data.spinY) > 0) {\n      var currentScrollTop = bodyWrapper.scrollTop;\n\n      if (data.pixelY < 0 && currentScrollTop !== 0) {\n        event.preventDefault();\n      }\n\n      if (data.pixelY > 0 && bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop) {\n        event.preventDefault();\n      }\n\n      bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5);\n    } else {\n      bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5);\n    }\n  };\n\n  var fixedHeight = computed(function () {\n    if (props.maxHeight) {\n      if (props.showSummary) {\n        return {\n          bottom: 0\n        };\n      }\n\n      return {\n        bottom: layout.scrollX.value && props.data.length ? \"\".concat(layout.gutterWidth, \"px\") : \"\"\n      };\n    } else {\n      if (props.showSummary) {\n        return {\n          height: layout.tableHeight.value ? \"\".concat(layout.tableHeight.value, \"px\") : \"\"\n        };\n      }\n\n      return {\n        height: layout.viewportHeight.value ? \"\".concat(layout.viewportHeight.value, \"px\") : \"\"\n      };\n    }\n  });\n  var fixedBodyHeight = computed(function () {\n    if (props.height) {\n      return {\n        height: layout.fixedBodyHeight.value ? \"\".concat(layout.fixedBodyHeight.value, \"px\") : \"\"\n      };\n    } else if (props.maxHeight) {\n      var maxHeight = parseHeight(props.maxHeight);\n\n      if (typeof maxHeight === \"number\") {\n        maxHeight = layout.scrollX.value ? maxHeight - layout.gutterWidth : maxHeight;\n\n        if (props.showHeader) {\n          maxHeight -= layout.headerHeight.value;\n        }\n\n        maxHeight -= layout.footerHeight.value;\n        return {\n          \"max-height\": \"\".concat(maxHeight, \"px\")\n        };\n      }\n    }\n\n    return {};\n  });\n  return {\n    isHidden: isHidden,\n    renderExpanded: renderExpanded,\n    setDragVisible: setDragVisible,\n    isGroup: isGroup,\n    handleMouseLeave: handleMouseLeave,\n    handleHeaderFooterMousewheel: handleHeaderFooterMousewheel,\n    tableSize: tableSize,\n    bodyHeight: bodyHeight,\n    emptyBlockStyle: emptyBlockStyle,\n    handleFixedMousewheel: handleFixedMousewheel,\n    fixedHeight: fixedHeight,\n    fixedBodyHeight: fixedBodyHeight,\n    resizeProxyVisible: resizeProxyVisible,\n    bodyWidth: bodyWidth,\n    resizeState: resizeState,\n    doLayout: doLayout\n  };\n}\n\nexport { useStyle as default };","map":null,"metadata":{},"sourceType":"module"}