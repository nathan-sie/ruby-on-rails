{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { on } from '../../utils/dom.mjs';\nimport isServer from '../../utils/isServer.mjs';\nvar nodeList = new Map();\nvar startClick;\n\nif (!isServer) {\n  on(document, \"mousedown\", function (e) {\n    return startClick = e;\n  });\n  on(document, \"mouseup\", function (e) {\n    var _iterator = _createForOfIteratorHelper(nodeList.values()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var handlers = _step.value;\n\n        var _iterator2 = _createForOfIteratorHelper(handlers),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _ref2 = _step2.value;\n            var documentHandler = _ref2.documentHandler;\n            documentHandler(e, startClick);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  });\n}\n\nfunction createDocumentHandler(el, binding) {\n  var excludes = [];\n\n  if (Array.isArray(binding.arg)) {\n    excludes = binding.arg;\n  } else if (binding.arg instanceof HTMLElement) {\n    excludes.push(binding.arg);\n  }\n\n  return function (mouseup, mousedown) {\n    var popperRef = binding.instance.popperRef;\n    var mouseUpTarget = mouseup.target;\n    var mouseDownTarget = mousedown == null ? void 0 : mousedown.target;\n    var isBound = !binding || !binding.instance;\n    var isTargetExists = !mouseUpTarget || !mouseDownTarget;\n    var isContainedByEl = el.contains(mouseUpTarget) || el.contains(mouseDownTarget);\n    var isSelf = el === mouseUpTarget;\n    var isTargetExcluded = excludes.length && excludes.some(function (item) {\n      return item == null ? void 0 : item.contains(mouseUpTarget);\n    }) || excludes.length && excludes.includes(mouseDownTarget);\n    var isContainedByPopper = popperRef && (popperRef.contains(mouseUpTarget) || popperRef.contains(mouseDownTarget));\n\n    if (isBound || isTargetExists || isContainedByEl || isSelf || isTargetExcluded || isContainedByPopper) {\n      return;\n    }\n\n    binding.value(mouseup, mousedown);\n  };\n}\n\nvar ClickOutside = {\n  beforeMount: function beforeMount(el, binding) {\n    if (!nodeList.has(el)) {\n      nodeList.set(el, []);\n    }\n\n    nodeList.get(el).push({\n      documentHandler: createDocumentHandler(el, binding),\n      bindingFn: binding.value\n    });\n  },\n  updated: function updated(el, binding) {\n    if (!nodeList.has(el)) {\n      nodeList.set(el, []);\n    }\n\n    var handlers = nodeList.get(el);\n    var oldHandlerIndex = handlers.findIndex(function (item) {\n      return item.bindingFn === binding.oldValue;\n    });\n    var newHandler = {\n      documentHandler: createDocumentHandler(el, binding),\n      bindingFn: binding.value\n    };\n\n    if (oldHandlerIndex >= 0) {\n      handlers.splice(oldHandlerIndex, 1, newHandler);\n    } else {\n      handlers.push(newHandler);\n    }\n  },\n  unmounted: function unmounted(el) {\n    nodeList[\"delete\"](el);\n  }\n};\nexport { ClickOutside as default };","map":null,"metadata":{},"sourceType":"module"}