{"ast":null,"code":"import { defineComponent, shallowRef, ref, computed, onMounted } from 'vue';\nimport { useThrottleFn, useEventListener } from '@vueuse/core';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { easeInOutCubic } from '../../../utils/animation.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { CaretTop } from '@element-plus/icons';\nimport { backtopProps, backtopEmits } from './backtop.mjs';\nvar COMPONENT_NAME = \"ElBacktop\";\nvar script = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElIcon: ElIcon,\n    CaretTop: CaretTop\n  },\n  props: backtopProps,\n  emits: backtopEmits,\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var el = shallowRef(document.documentElement);\n    var container = shallowRef(document);\n    var visible = ref(false);\n    var styleBottom = computed(function () {\n      return \"\".concat(props.bottom, \"px\");\n    });\n    var styleRight = computed(function () {\n      return \"\".concat(props.right, \"px\");\n    });\n\n    var scrollToTop = function scrollToTop() {\n      if (!el.value) return;\n      var beginTime = Date.now();\n      var beginValue = el.value.scrollTop;\n\n      var frameFunc = function frameFunc() {\n        if (!el.value) return;\n        var progress = (Date.now() - beginTime) / 500;\n\n        if (progress < 1) {\n          el.value.scrollTop = beginValue * (1 - easeInOutCubic(progress));\n          requestAnimationFrame(frameFunc);\n        } else {\n          el.value.scrollTop = 0;\n        }\n      };\n\n      requestAnimationFrame(frameFunc);\n    };\n\n    var handleScroll = function handleScroll() {\n      if (el.value) visible.value = el.value.scrollTop >= props.visibilityHeight;\n    };\n\n    var handleClick = function handleClick(event) {\n      scrollToTop();\n      emit(\"click\", event);\n    };\n\n    var handleScrollThrottled = useThrottleFn(handleScroll, 300);\n    onMounted(function () {\n      var _a;\n\n      if (props.target) {\n        el.value = (_a = document.querySelector(props.target)) != null ? _a : void 0;\n\n        if (!el.value) {\n          throwError(COMPONENT_NAME, \"target is not existed: \".concat(props.target));\n        }\n\n        container.value = el.value;\n      }\n\n      useEventListener(container, \"scroll\", handleScrollThrottled);\n    });\n    return {\n      visible: visible,\n      styleBottom: styleBottom,\n      styleRight: styleRight,\n      handleClick: handleClick\n    };\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}