{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/props.mjs';\nimport { useFormItemProps } from '../../../hooks/use-form-item/index.mjs';\nvar buttonType = [\"default\", \"primary\", \"success\", \"warning\", \"info\", \"danger\", \"text\", \"\"];\nvar buttonSize = [\"\", \"large\", \"medium\", \"small\", \"mini\"];\nvar buttonNativeType = [\"button\", \"submit\", \"reset\"];\nvar buttonProps = buildProps(_objectSpread(_objectSpread({}, useFormItemProps), {}, {\n  type: {\n    type: String,\n    values: buttonType,\n    \"default\": \"\"\n  },\n  icon: {\n    type: definePropType([String, Object]),\n    \"default\": \"\"\n  },\n  nativeType: {\n    type: String,\n    values: buttonNativeType,\n    \"default\": \"button\"\n  },\n  loading: Boolean,\n  plain: Boolean,\n  autofocus: Boolean,\n  round: Boolean,\n  circle: Boolean,\n  autoInsertSpace: {\n    type: Boolean\n  }\n}));\nvar buttonEmits = {\n  click: function click(evt) {\n    return evt instanceof MouseEvent;\n  }\n};\nexport { buttonEmits, buttonNativeType, buttonProps, buttonSize, buttonType };","map":null,"metadata":{},"sourceType":"module"}