{"ast":null,"code":"import { onMounted, getCurrentInstance } from 'vue';\nimport { debugWarn } from '../../utils/error.mjs';\nimport { kebabCase } from '../../utils/util.mjs';\n\nvar useMigrating = function useMigrating() {\n  onMounted(function () {\n    var _a;\n\n    var instance = getCurrentInstance();\n    if (process.env.NODE_ENV === \"production\") return;\n    if (!instance.vnode) return;\n\n    var _getMigratingConfig = getMigratingConfig(),\n        _getMigratingConfig$p = _getMigratingConfig.props,\n        props = _getMigratingConfig$p === void 0 ? {} : _getMigratingConfig$p;\n\n    var data = instance.data;\n    var definedProps = data.attrs || {};\n\n    for (var propName in definedProps) {\n      propName = kebabCase(propName);\n\n      if (props[propName]) {\n        debugWarn(\"Element Migrating\", \"[\".concat((_a = instance.proxy) == null ? void 0 : _a.$options.name, \"][Attribute]: \").concat(props[propName]));\n      }\n    }\n  });\n\n  var getMigratingConfig = function getMigratingConfig() {\n    return {\n      props: {},\n      events: {}\n    };\n  };\n\n  return {\n    getMigratingConfig: getMigratingConfig\n  };\n};\n\nexport { useMigrating as default };","map":null,"metadata":{},"sourceType":"module"}