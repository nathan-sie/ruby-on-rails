{"ast":null,"code":"import { openBlock, createElementBlock, normalizeClass, withKeys, withModifiers, withDirectives, createElementVNode, vModelRadio, normalizeStyle, renderSlot, createTextVNode, toDisplayString } from 'vue';\nvar _hoisted_1 = [\"aria-checked\", \"aria-disabled\", \"tabindex\"];\nvar _hoisted_2 = [\"value\", \"name\", \"disabled\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"label\", {\n    \"class\": normalizeClass([\"el-radio-button\", [_ctx.size ? \"el-radio-button--\" + _ctx.size : \"\", {\n      \"is-active\": _ctx.modelValue === _ctx.label,\n      \"is-disabled\": _ctx.disabled,\n      \"is-focus\": _ctx.focus\n    }]]),\n    role: \"radio\",\n    \"aria-checked\": _ctx.modelValue === _ctx.label,\n    \"aria-disabled\": _ctx.disabled,\n    tabindex: _ctx.tabIndex,\n    onKeydown: _cache[4] || (_cache[4] = withKeys(withModifiers(function ($event) {\n      return _ctx.modelValue = _ctx.disabled ? _ctx.modelValue : _ctx.label;\n    }, [\"stop\", \"prevent\"]), [\"space\"]))\n  }, [withDirectives(createElementVNode(\"input\", {\n    ref: \"radioRef\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.modelValue = $event;\n    }),\n    \"class\": \"el-radio-button__original-radio\",\n    value: _ctx.label,\n    type: \"radio\",\n    name: _ctx.name,\n    disabled: _ctx.disabled,\n    tabindex: \"-1\",\n    onFocus: _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.focus = true;\n    }),\n    onBlur: _cache[2] || (_cache[2] = function ($event) {\n      return _ctx.focus = false;\n    })\n  }, null, 40, _hoisted_2), [[vModelRadio, _ctx.modelValue]]), createElementVNode(\"span\", {\n    \"class\": \"el-radio-button__inner\",\n    style: normalizeStyle(_ctx.modelValue === _ctx.label ? _ctx.activeStyle : {}),\n    onKeydown: _cache[3] || (_cache[3] = withModifiers(function () {}, [\"stop\"]))\n  }, [renderSlot(_ctx.$slots, \"default\", {}, function () {\n    return [createTextVNode(toDisplayString(_ctx.label), 1)];\n  })], 36)], 42, _hoisted_1);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}