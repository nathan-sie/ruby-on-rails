{"ast":null,"code":"import { defineComponent, onMounted, getCurrentInstance } from 'vue';\nimport '../../../directives/index.mjs';\nimport { useDropdown, initDropdownDomEvent } from './useDropdown.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nvar script = defineComponent({\n  name: \"ElDropdownMenu\",\n  directives: {\n    ClickOutside: ClickOutside\n  },\n  setup: function setup() {\n    var _useDropdown = useDropdown(),\n        _elDropdownSize = _useDropdown._elDropdownSize,\n        elDropdown = _useDropdown.elDropdown;\n\n    var size = _elDropdownSize.value;\n\n    function show() {\n      var _a;\n\n      if ([\"click\", \"contextmenu\"].includes(elDropdown.trigger.value)) return;\n      (_a = elDropdown.show) == null ? void 0 : _a.call(elDropdown);\n    }\n\n    function hide() {\n      if ([\"click\", \"contextmenu\"].includes(elDropdown.trigger.value)) return;\n\n      _hide();\n    }\n\n    function _hide() {\n      var _a;\n\n      (_a = elDropdown.hide) == null ? void 0 : _a.call(elDropdown);\n    }\n\n    onMounted(function () {\n      var dropdownMenu = getCurrentInstance();\n      initDropdownDomEvent(dropdownMenu, elDropdown.triggerElm.value, elDropdown.instance);\n    });\n    return {\n      size: size,\n      show: show,\n      hide: hide,\n      innerHide: _hide,\n      triggerElm: elDropdown.triggerElm\n    };\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}