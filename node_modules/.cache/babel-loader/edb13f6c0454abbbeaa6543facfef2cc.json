{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, withKeys, withModifiers, createVNode, withCtx, createElementVNode, toDisplayString } from 'vue';\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"button\",\n    \"class\": normalizeClass([\"el-slider__button-wrapper\", {\n      hover: _ctx.hovering,\n      dragging: _ctx.dragging\n    }]),\n    style: normalizeStyle(_ctx.wrapperStyle),\n    tabindex: \"0\",\n    onMouseenter: _cache[1] || (_cache[1] = function () {\n      return _ctx.handleMouseEnter && _ctx.handleMouseEnter.apply(_ctx, arguments);\n    }),\n    onMouseleave: _cache[2] || (_cache[2] = function () {\n      return _ctx.handleMouseLeave && _ctx.handleMouseLeave.apply(_ctx, arguments);\n    }),\n    onMousedown: _cache[3] || (_cache[3] = function () {\n      return _ctx.onButtonDown && _ctx.onButtonDown.apply(_ctx, arguments);\n    }),\n    onTouchstart: _cache[4] || (_cache[4] = function () {\n      return _ctx.onButtonDown && _ctx.onButtonDown.apply(_ctx, arguments);\n    }),\n    onFocus: _cache[5] || (_cache[5] = function () {\n      return _ctx.handleMouseEnter && _ctx.handleMouseEnter.apply(_ctx, arguments);\n    }),\n    onBlur: _cache[6] || (_cache[6] = function () {\n      return _ctx.handleMouseLeave && _ctx.handleMouseLeave.apply(_ctx, arguments);\n    }),\n    onKeydown: [_cache[7] || (_cache[7] = withKeys(function () {\n      return _ctx.onLeftKeyDown && _ctx.onLeftKeyDown.apply(_ctx, arguments);\n    }, [\"left\"])), _cache[8] || (_cache[8] = withKeys(function () {\n      return _ctx.onRightKeyDown && _ctx.onRightKeyDown.apply(_ctx, arguments);\n    }, [\"right\"])), _cache[9] || (_cache[9] = withKeys(withModifiers(function () {\n      return _ctx.onLeftKeyDown && _ctx.onLeftKeyDown.apply(_ctx, arguments);\n    }, [\"prevent\"]), [\"down\"])), _cache[10] || (_cache[10] = withKeys(withModifiers(function () {\n      return _ctx.onRightKeyDown && _ctx.onRightKeyDown.apply(_ctx, arguments);\n    }, [\"prevent\"]), [\"up\"]))]\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"tooltip\",\n    modelValue: _ctx.tooltipVisible,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.tooltipVisible = $event;\n    }),\n    placement: \"top\",\n    \"stop-popper-mouse-event\": false,\n    \"popper-class\": _ctx.tooltipClass,\n    disabled: !_ctx.showTooltip,\n    manual: \"\"\n  }, {\n    content: withCtx(function () {\n      return [createElementVNode(\"span\", null, toDisplayString(_ctx.formatValue), 1)];\n    }),\n    \"default\": withCtx(function () {\n      return [createElementVNode(\"div\", {\n        \"class\": normalizeClass([\"el-slider__button\", {\n          hover: _ctx.hovering,\n          dragging: _ctx.dragging\n        }])\n      }, null, 2)];\n    }),\n    _: 1\n  }, 8, [\"modelValue\", \"popper-class\", \"disabled\"])], 38);\n}\n\nexport { render };","map":null,"metadata":{},"sourceType":"module"}