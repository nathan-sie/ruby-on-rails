{"ast":null,"code":"import { inject, computed } from 'vue';\nimport { throwError } from '../../../utils/error.mjs';\n\nfunction useMenu(instance, currentIndex) {\n  var rootMenu = inject(\"rootMenu\");\n  if (!rootMenu) throwError(\"useMenu\", \"can not inject root menu\");\n  var indexPath = computed(function () {\n    var parent = instance.parent;\n    var path = [currentIndex.value];\n\n    while (parent.type.name !== \"ElMenu\") {\n      if (parent.props.index) {\n        path.unshift(parent.props.index);\n      }\n\n      parent = parent.parent;\n    }\n\n    return path;\n  });\n  var parentMenu = computed(function () {\n    var parent = instance.parent;\n\n    while (parent && ![\"ElMenu\", \"ElSubMenu\"].includes(parent.type.name)) {\n      parent = parent.parent;\n    }\n\n    return parent;\n  });\n  var paddingStyle = computed(function () {\n    var parent = instance.parent;\n    if (rootMenu.props.mode !== \"vertical\") return {};\n    var padding = 20;\n\n    if (rootMenu.props.collapse) {\n      padding = 20;\n    } else {\n      while (parent && parent.type.name !== \"ElMenu\") {\n        if (parent.type.name === \"ElSubMenu\") {\n          padding += 20;\n        }\n\n        parent = parent.parent;\n      }\n    }\n\n    return {\n      paddingLeft: \"\".concat(padding, \"px\")\n    };\n  });\n  return {\n    parentMenu: parentMenu,\n    paddingStyle: paddingStyle,\n    indexPath: indexPath\n  };\n}\n\nexport { useMenu as default };","map":null,"metadata":{},"sourceType":"module"}