{"ast":null,"code":"var _LayoutKeys;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { cAF, rAF } from '../../../../utils/raf.mjs';\nimport { isFF } from '../utils.mjs';\nimport { HORIZONTAL, VERTICAL } from '../defaults.mjs';\nvar LayoutKeys = (_LayoutKeys = {}, _defineProperty(_LayoutKeys, HORIZONTAL, \"deltaX\"), _defineProperty(_LayoutKeys, VERTICAL, \"deltaY\"), _LayoutKeys);\n\nvar useWheel = function useWheel(_ref, onWheelDelta) {\n  var atEndEdge = _ref.atEndEdge,\n      atStartEdge = _ref.atStartEdge,\n      layout = _ref.layout;\n  var frameHandle;\n  var offset = 0;\n\n  var hasReachedEdge = function hasReachedEdge(offset2) {\n    var edgeReached = offset2 < 0 && atStartEdge.value || offset2 > 0 && atEndEdge.value;\n    return edgeReached;\n  };\n\n  var onWheel = function onWheel(e) {\n    cAF(frameHandle);\n    var newOffset = e[LayoutKeys[layout.value]];\n    if (hasReachedEdge(offset) && hasReachedEdge(offset + newOffset)) return;\n    offset += newOffset;\n\n    if (!isFF) {\n      e.preventDefault();\n    }\n\n    frameHandle = rAF(function () {\n      onWheelDelta(offset);\n      offset = 0;\n    });\n  };\n\n  return {\n    hasReachedEdge: hasReachedEdge,\n    onWheel: onWheel\n  };\n};\n\nexport { useWheel as default };","map":null,"metadata":{},"sourceType":"module"}