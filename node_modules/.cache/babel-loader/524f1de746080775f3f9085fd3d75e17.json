{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { computed, ref, watchEffect } from 'vue';\nimport { isNumber } from '../../../utils/util.mjs';\nvar SIZE_MAP = {\n  mini: 4,\n  small: 8,\n  medium: 12,\n  large: 16\n};\n\nfunction useSpace(props) {\n  var classes = computed(function () {\n    return [\"el-space\", \"el-space--\".concat(props.direction), props[\"class\"]];\n  });\n  var horizontalSize = ref(0);\n  var verticalSize = ref(0);\n  var containerStyle = computed(function () {\n    var wrapKls = props.wrap || props.fill ? {\n      flexWrap: \"wrap\",\n      marginBottom: \"-\".concat(verticalSize.value, \"px\")\n    } : {};\n    var alignment = {\n      alignItems: props.alignment\n    };\n    return [wrapKls, alignment, props.style];\n  });\n  var itemStyle = computed(function () {\n    var itemBaseStyle = {\n      paddingBottom: \"\".concat(verticalSize.value, \"px\"),\n      marginRight: \"\".concat(horizontalSize.value, \"px\")\n    };\n    var fillStyle = props.fill ? {\n      flexGrow: 1,\n      minWidth: \"\".concat(props.fillRatio, \"%\")\n    } : {};\n    return [itemBaseStyle, fillStyle];\n  });\n  watchEffect(function () {\n    var _props$size = props.size,\n        size = _props$size === void 0 ? \"small\" : _props$size,\n        wrap = props.wrap,\n        dir = props.direction,\n        fill = props.fill;\n\n    if (Array.isArray(size)) {\n      var _size = _slicedToArray(size, 2),\n          _size$ = _size[0],\n          h = _size$ === void 0 ? 0 : _size$,\n          _size$2 = _size[1],\n          v = _size$2 === void 0 ? 0 : _size$2;\n\n      horizontalSize.value = h;\n      verticalSize.value = v;\n    } else {\n      var val;\n\n      if (isNumber(size)) {\n        val = size;\n      } else {\n        val = SIZE_MAP[size] || SIZE_MAP.small;\n      }\n\n      if ((wrap || fill) && dir === \"horizontal\") {\n        horizontalSize.value = verticalSize.value = val;\n      } else {\n        if (dir === \"horizontal\") {\n          horizontalSize.value = val;\n          verticalSize.value = 0;\n        } else {\n          verticalSize.value = val;\n          horizontalSize.value = 0;\n        }\n      }\n    }\n  });\n  return {\n    classes: classes,\n    containerStyle: containerStyle,\n    itemStyle: itemStyle\n  };\n}\n\nexport { useSpace };","map":null,"metadata":{},"sourceType":"module"}