{"ast":null,"code":"import { defineComponent, inject, computed, ref, onMounted, onBeforeUnmount } from 'vue';\nimport { addResizeListener, removeResizeListener } from '../../../utils/resize-event.mjs';\nimport { selectKey } from './token.mjs';\nvar script = defineComponent({\n  name: \"ElSelectDropdown\",\n  componentName: \"ElSelectDropdown\",\n  setup: function setup() {\n    var select = inject(selectKey);\n    var popperClass = computed(function () {\n      return select.props.popperClass;\n    });\n    var isMultiple = computed(function () {\n      return select.props.multiple;\n    });\n    var isFitInputWidth = computed(function () {\n      return select.props.fitInputWidth;\n    });\n    var minWidth = ref(\"\");\n\n    function updateMinWidth() {\n      var _a;\n\n      minWidth.value = \"\".concat((_a = select.selectWrapper) == null ? void 0 : _a.getBoundingClientRect().width, \"px\");\n    }\n\n    onMounted(function () {\n      addResizeListener(select.selectWrapper, updateMinWidth);\n    });\n    onBeforeUnmount(function () {\n      removeResizeListener(select.selectWrapper, updateMinWidth);\n    });\n    return {\n      minWidth: minWidth,\n      popperClass: popperClass,\n      isMultiple: isMultiple,\n      isFitInputWidth: isFitInputWidth\n    };\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}