{"ast":null,"code":"import { defineComponent, reactive, computed, toRefs } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { ElCheckboxGroup, ElCheckbox } from '../../checkbox/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport { CircleClose, Search } from '@element-plus/icons';\nimport { useCheckProps, CHECKED_CHANGE_EVENT, useCheck } from './useCheck.mjs';\nimport { useLocaleInject } from '../../../hooks/use-locale/index.mjs';\nvar script = defineComponent({\n  name: \"ElTransferPanel\",\n  components: {\n    ElCheckboxGroup: ElCheckboxGroup,\n    ElCheckbox: ElCheckbox,\n    ElInput: ElInput,\n    ElIcon: ElIcon,\n    OptionContent: function OptionContent(_ref) {\n      var option = _ref.option;\n      return option;\n    }\n  },\n  props: useCheckProps,\n  emits: [CHECKED_CHANGE_EVENT],\n  setup: function setup(props, _ref2) {\n    var slots = _ref2.slots;\n\n    var _useLocaleInject = useLocaleInject(),\n        t = _useLocaleInject.t;\n\n    var panelState = reactive({\n      checked: [],\n      allChecked: false,\n      query: \"\",\n      inputHover: false,\n      checkChangeByUser: true\n    });\n\n    var _useCheck = useCheck(props, panelState),\n        labelProp = _useCheck.labelProp,\n        keyProp = _useCheck.keyProp,\n        disabledProp = _useCheck.disabledProp,\n        filteredData = _useCheck.filteredData,\n        checkedSummary = _useCheck.checkedSummary,\n        isIndeterminate = _useCheck.isIndeterminate,\n        handleAllCheckedChange = _useCheck.handleAllCheckedChange;\n\n    var hasNoMatch = computed(function () {\n      return panelState.query.length > 0 && filteredData.value.length === 0;\n    });\n    var inputIcon = computed(function () {\n      return panelState.query.length > 0 && panelState.inputHover ? CircleClose : Search;\n    });\n    var hasFooter = computed(function () {\n      return !!slots[\"default\"]()[0].children.length;\n    });\n\n    var clearQuery = function clearQuery() {\n      if (inputIcon.value === CircleClose) {\n        panelState.query = \"\";\n      }\n    };\n\n    var _toRefs = toRefs(panelState),\n        checked = _toRefs.checked,\n        allChecked = _toRefs.allChecked,\n        query = _toRefs.query,\n        inputHover = _toRefs.inputHover,\n        checkChangeByUser = _toRefs.checkChangeByUser;\n\n    return {\n      labelProp: labelProp,\n      keyProp: keyProp,\n      disabledProp: disabledProp,\n      filteredData: filteredData,\n      checkedSummary: checkedSummary,\n      isIndeterminate: isIndeterminate,\n      handleAllCheckedChange: handleAllCheckedChange,\n      checked: checked,\n      allChecked: allChecked,\n      query: query,\n      inputHover: inputHover,\n      checkChangeByUser: checkChangeByUser,\n      hasNoMatch: hasNoMatch,\n      inputIcon: inputIcon,\n      hasFooter: hasFooter,\n      clearQuery: clearQuery,\n      t: t\n    };\n  }\n});\nexport { script as default };","map":null,"metadata":{},"sourceType":"module"}