{"ast":null,"code":"import { getCurrentInstance, ref } from 'vue';\nimport { getKeysMap, getRowIdentity, toggleRowStatus } from '../util.mjs';\n\nfunction useExpand(watcherData) {\n  var instance = getCurrentInstance();\n  var defaultExpandAll = ref(false);\n  var expandRows = ref([]);\n\n  var updateExpandRows = function updateExpandRows() {\n    var data = watcherData.data.value || [];\n    var rowKey = watcherData.rowKey.value;\n\n    if (defaultExpandAll.value) {\n      expandRows.value = data.slice();\n    } else if (rowKey) {\n      var expandRowsMap = getKeysMap(expandRows.value, rowKey);\n      expandRows.value = data.reduce(function (prev, row) {\n        var rowId = getRowIdentity(row, rowKey);\n        var rowInfo = expandRowsMap[rowId];\n\n        if (rowInfo) {\n          prev.push(row);\n        }\n\n        return prev;\n      }, []);\n    } else {\n      expandRows.value = [];\n    }\n  };\n\n  var toggleRowExpansion = function toggleRowExpansion(row, expanded) {\n    var changed = toggleRowStatus(expandRows.value, row, expanded);\n\n    if (changed) {\n      instance.emit(\"expand-change\", row, expandRows.value.slice());\n      instance.store.scheduleLayout();\n    }\n  };\n\n  var setExpandRowKeys = function setExpandRowKeys(rowKeys) {\n    instance.store.assertRowKey();\n    var data = watcherData.data.value || [];\n    var rowKey = watcherData.rowKey.value;\n    var keysMap = getKeysMap(data, rowKey);\n    expandRows.value = rowKeys.reduce(function (prev, cur) {\n      var info = keysMap[cur];\n\n      if (info) {\n        prev.push(info.row);\n      }\n\n      return prev;\n    }, []);\n  };\n\n  var isRowExpanded = function isRowExpanded(row) {\n    var rowKey = watcherData.rowKey.value;\n\n    if (rowKey) {\n      var expandMap = getKeysMap(expandRows.value, rowKey);\n      return !!expandMap[getRowIdentity(row, rowKey)];\n    }\n\n    return expandRows.value.indexOf(row) !== -1;\n  };\n\n  return {\n    updateExpandRows: updateExpandRows,\n    toggleRowExpansion: toggleRowExpansion,\n    setExpandRowKeys: setExpandRowKeys,\n    isRowExpanded: isRowExpanded,\n    states: {\n      expandRows: expandRows,\n      defaultExpandAll: defaultExpandAll\n    }\n  };\n}\n\nexport { useExpand as default };","map":null,"metadata":{},"sourceType":"module"}